{"version":3,"sources":["components/Account/index.tsx","services/userAPI/index.ts","store/reducer/account-reducer.ts","containers/Account.ts","services/eventAPI/index.ts","components/EventInfo/index.tsx","components/ForgetPassword/index.tsx","store/reducer/resetPassword-reducer.ts","containers/ForgetPassword.ts","components/Home/index.tsx","components/Loggedout/index.tsx","store/reducer/loggedout-reducer.ts","containers/Loggedout.ts","components/Login/index.tsx","store/reducer/login-reducer.ts","containers/Login.ts","lib/validationMail.ts","components/Mail/index.tsx","containers/Mail.ts","components/Nav/index.tsx","lib/validationPassword.ts","components/NewPassword/index.tsx","store/reducer/newPassword-reducer.ts","containers/NewPassword.ts","components/NotFound/index.tsx","components/Password/index.tsx","containers/Password.ts","components/PrivateRoute/index.tsx","components/PublicRoute/index.tsx","lib/validation.ts","components/Signup/index.tsx","store/reducer/signup-reducer.ts","containers/Signup.ts","components/TodayEvents/index.tsx","components/UserName/index.tsx","containers/UserName.ts","components/WeekEvents/index.tsx","components/App/index.tsx","reportWebVitals.js","store/reducer/index.ts","store/index.ts","index.tsx"],"names":["Account","display","pseudo","mail","date","password","onClick","init","slice","handleInit","TabPane","className","onChange","key","console","log","tab","to","title","onConfirm","message","success","okText","cancelText","src","alt","headers","API_URL","process","axios","defaults","withCredentials","delete","get","localStorage","getItem","setItem","removeItem","formState","post","qs","stringify","put","stateInitial","ACCOUNT_SUCCESS","ACCOUNT_ERROR","UPDATE_SUCCESS","UPDATE_ERROR","DELETE_SUCCESS","DELETE_ERROR","INIT","accountSuccess","payload","type","accountError","updateSuccess","updateError","deleteSuccess","deleteError","reducer","state","action","error","connect","account","dispatch","getState","userAPI","then","res","data","user","catch","err","location","eventName","idEvent","EventInfo","props","useState","events","setEvents","match","params","a","eventAPI","eventsInfo","details","useEffect","eventDetails","href","map","result","url","target","id","ForgetPassword","onSubmit","setTimeout","setFormState","e","preventDefault","method","name","placeholder","value","required","RESET_DEMAND_SUCCESS","RESET_DEMAND_ERROR","resetDemandSuccess","resetDemandError","resetPassword","Home","Loggedout","loggedout","window","replace","LOGOUT_SUCCESS","LOGOUT_ERROR","PSEUDO_SUCCESS","PSEUDO_ERROR","pseudoSuccess","pseudoError","Login","loggedin","handleChange","htmlFor","htmlType","LOGIN_SUCCESS","LOGIN_ERROR","loginSuccess","loginError","login","subscriber","response","text","alert","displayError","validate","presence","format","pattern","length","minimum","Mail","history","useHistory","push","update","keyValue","accountMail","Nav","theme","setTheme","SubMenu","mode","document","getElementsByClassName","body","classList","toggle","checkedChildren","unCheckedChildren","Item","NewPassword","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","resetPasswordSuccess","resetPasswordError","newPassword","NotFound","Password","accountPassword","PrivateRoute","Component","component","rest","render","PublicRoute","restricted","Signup","validateMail","setValidateMail","validatePassword","setValidatePassword","undefined","SIGNUP_SUCCESS","SIGNUP_ERROR","signupSuccess","signupError","signup","signUp","TodayEvents","todayEvents","setTodayEvents","event","TodayEventsInfo","TodayEventsList","start_time","venue_name","venue_address","city_name","region_name","UserName","accountPseudo","WeekEvents","weekEvents","setWeekEvents","weekEventsInfo","weekEventsList","App","setInterval","auth","un","style","displayAuth","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","reduxThunk","ComponentToRender","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5b43621a.chunk.js","sourcesContent":["import React, { useState} from 'react';\nimport { Redirect, Link  } from 'react-router-dom';\nimport userAPI from '../../services/userAPI';\nimport { Tabs, Popconfirm, message } from 'antd';\nimport './index.css';\n\n\n \n\nconst Account = ({display, pseudo, mail, password, date, onClick, init}) => {\n\ndisplay();\n\ndate = date.slice(0, 10);\n\n\nconst handleDelete = () => {\n  \n        onClick();\n        message.success('Suppression réussie !');\n \n}\n\nconst handleInit = () => {\n    init();\n}\n\nconst { TabPane } = Tabs;\nfunction callback(key) {\n  console.log(key);\n}\n\n//if(!subscriber) { return <Redirect to=\"/\" />}\n\n    return (\n        <div className=\"account\"> \n        \n            <div className=\"separator\"></div>\n            <div className=\"count\"> \n            < h1>    Mon compte </h1>\n             <Tabs onChange={callback} >\n                 <TabPane tab=\"Tab 1\" key=\"1\">\n                   Content of Tab Pane 1\n                 </TabPane>\n                 <TabPane tab=\"Tab 2\" key=\"2\">\n                   Content of Tab Pane 2\n                 </TabPane>\n             </Tabs>     \n       \n       \n            </div>\n\n             Pseudo: {pseudo} < br/> \n        adresse mail: {mail} < br/>\n        Date d'inscription: {date} < br/>< br/> < br/> \n          \n        <Link to=\"/mise-a-jour-pseudo\" onClick={handleInit}>Modifier votre pseudo</Link> < br/>\n        <Link to=\"/mise-a-jour-pseudo\" onClick={handleInit}>Modifier votre adresse mail</Link> < br/>\n        <Link to=\"/mise-a-jour-mot-de-passe\" onClick={handleInit}>Modifier votre mot de passe</Link>< br/>\n        <Link to=\"/\"> Accueil </Link>< br/>< br/>\n       \n        <Popconfirm\n            title=\"Voulez vous vraiment nous quitter ?\"\n            onConfirm={handleDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            className=\"popconfirm\"\n        >\n            \n            <img src=\"https://media.giphy.com/media/dyJ9XHstowFRC/giphy.gif\" alt=\"gif d'un bonhomme de lumière allant vers la sortie\"/>\n            Désinscription\n         </Popconfirm>\n\n        </div>\n    )\n}\n\nexport default Account;","  \nimport axios from 'axios';\nimport qs from 'qs';\nimport cookie from 'react-cookies';\nconst headers = {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n};\n\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\n\nexport default {\n\n    deleteUser: () => { \n        axios.defaults.withCredentials = true;\n        return axios.delete( API_URL + '/deleteAccount', {headers: headers})\n    },\n\n    infoUser: () => { \n        axios.defaults.withCredentials = true;\n        return axios.get( API_URL + '/account')\n    }, \n\n    isAdmin: () => { \n        axios.defaults.withCredentials = true;\n        return  axios.get( API_URL + '/admin')\n    },\n\n    isAuth: () => {\n         if (localStorage.getItem('login')) {\n         return true;\n        }\n         return false;\n    },\n\n    login: () => {\n        localStorage.setItem('login', 'Login');\n    },\n\n    logout: () => {\n       localStorage.removeItem('login');\n    },\n    \n    loginUser: (formState) => { \n        axios.defaults.withCredentials = true;\n        return axios.post( API_URL + '/login', qs.stringify(formState), {headers: headers})\n        },\n    \n    logOut: () => { \n        axios.defaults.withCredentials = true;\n        return axios.get( API_URL + '/logout')\n    },\n\n    newPassword: (formState) => { \n        // @ts-ignore\n        return axios.post( API_URL + '/new-password/:passwordResetToken', qs.stringify(formState))\n        },\n        \n    pseudoUser: () => { \n        axios.defaults.withCredentials = true;\n        return axios.get( API_URL + '/')\n    }, \n\n    resetPassword: (formState) => {\n        // @ts-ignore \n        return axios.get( API_URL + '/reset-password', qs.stringify(formState))\n    },\n\n    signupUser: (formState) => {\n        return axios.post( API_URL + '/signup', qs.stringify(formState), {headers: headers})\n    },\n   \n    updateMail: (formState) => { \n        axios.defaults.withCredentials = true;\n        return axios.put( API_URL + '/update-mail', qs.stringify(formState), {headers: headers})\n    },\n\n    updatePseudo: (formState) => { \n        axios.defaults.withCredentials = true;\n        return axios.put( API_URL + '/update-user-name', qs.stringify(formState), {headers: headers})\n    }, \n\n    updatePassword: (formState) => { \n        axios.defaults.withCredentials = true;\n        return axios.put( API_URL + '/update-password', qs.stringify(formState), {headers: headers})\n    }\n\n}","\nimport userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    pseudo: '',\n    mail: '',\n    password: '',\n    date: '',\n };\n\n export const ACCOUNT_SUCCESS = \"ACCOUNT_SUCCESS\";\n export const ACCOUNT_ERROR = \"ACCOUNT_ERROR\";\n export const UPDATE_SUCCESS = \"UPDATE_SUCCESS\";\n export const UPDATE_ERROR = \"UPDATE_ERROR\";\n export const DELETE_SUCCESS = \"DELETE_SUCCESS\";\n export const DELETE_ERROR = \"DELETE_ERROR\";\n export const INIT = \"INIT\";\n\nconst reducer = (state = stateInitial, action : {type: string, payload : any}) => {\n    switch(action.type){\n        case ACCOUNT_SUCCESS: \n            return {\n                ...state, // = stateInitial\n                ...action.payload,// = overwrite stateInitial with data from appli\n                error: false\n\n            }\n        case ACCOUNT_ERROR:\n            return {\n                ...state,\n                error: \"affichage non réussi\",\n\n            }\n\n        case UPDATE_SUCCESS: \n            return {\n                ...state, \n                ...action.payload,\n                error: false\n\n            }\n        case UPDATE_ERROR:\n            return {\n                ...state,\n                error: \"mise à jour non réussi\",\n\n            }\n        case DELETE_SUCCESS: \n            return {\n                ...state, \n                ...stateInitial,\n                error: false\n\n            }\n        case DELETE_ERROR:\n            return {\n                ...state,\n                error: \"désinscription non réussi\",\n\n            }\n        case INIT: \n            return {\n                ...state, \n                ...stateInitial,\n                error: false\n\n            }\n        default:\n            return state;\n    }\n}\n\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\nexport const displayAccount = () => (dispatch, getState) => {\n    \n\n    // collect user info\n    return  userAPI.infoUser()\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.displayAccount\n            \n            dispatch(accountSuccess(res.data.user));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n \n            dispatch(accountError());\n        });\n};\n\nexport const accountPseudo = (formState) => (dispatch, getState) => {\n    // name of the input\n  \n    // axios collect post info from the user via name input\n    return  userAPI.updatePseudo(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(updateSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            if (err.response.data.error.keyValue.pseudo ) {\n                alert((err.response.data.error.keyValue.pseudo)  + \" existe déjà!\");};\n          \n            dispatch(updateError());\n        });\n};\n\nexport const accountMail = (formState) => (dispatch, getState) => {\n    // name of the inputateInitial\n    \n    // axios collect post info from the user via name input\n    return  userAPI.updateMail(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(updateSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n      \n            if (err.response.data.error.keyValue.mail) {\n                alert((err.response.data.error.keyValue.mail) + \" existe déjà!\");};\n          \n            dispatch(updateError());\n        });\n};\n\n\nexport const accountPassword = (formState) => (dispatch, getState) => {\n    // name of the input\n    // axios collect post info from the user via name input\n    return  userAPI.updatePassword(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(updateSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n          \n            dispatch(updateError());\n        });\n};\n\nexport const deleteAccount = () => (dispatch, getState) => {\n   \n    return  userAPI.deleteUser()\n        .then( (res) => {\n            // inform my reducer this is a success \n            \n            dispatch(deleteSuccess());\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            dispatch(deleteError());\n        });\n};\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\n\n\nexport const accountSuccess = (payload) => ({\n    type: ACCOUNT_SUCCESS,\n    payload\n});\n\nexport const accountError = () => ({\n    type: ACCOUNT_ERROR\n});\n\nexport const updateSuccess = (payload) => ({\n    type: UPDATE_SUCCESS,\n    payload\n});\n\nexport const updateError = () => ({\n    type: UPDATE_ERROR\n});\n\n\nexport const deleteSuccess = () => ({\n    type: DELETE_SUCCESS\n});\n\nexport const deleteError = () => ({\n    type: DELETE_ERROR\n});\n\nexport const init = () => ({\n    type: INIT\n});\nexport default reducer;","import { connect } from 'react-redux';\nimport Account from '../components/Account';\nimport { displayAccount, init, deleteAccount } from '../store/reducer/account-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   pseudo: state.account.pseudo, \n   mail: state.account.mail,\n   password: state.account.password,\n   date: state.account.date\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  display : () => {\n        dispatch(displayAccount());\n    },\n  init: () => {\n      dispatch(init());\n  },\n  onClick: () => {\n      dispatch(deleteAccount());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);","import axios from 'axios';\nimport qs from 'qs';\nconst headers = {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n};\n\nconst API_URL = process.env.REACT_APP_API_URL;\nconsole.log(\"API_URL: \",API_URL);\n\nexport default { \n\n    todayEvents: (location) => {\n        axios.defaults.withCredentials = false;\n        return axios.get( API_URL + `/${location}/today`)\n        },\n\n    weekEvents: (location) => {\n        axios.defaults.withCredentials = false;\n        return axios.get( API_URL + `/${location}/week`)\n        },    \n\n    eventInfo: (eventName,idEvent) => {\n       axios.defaults.withCredentials = true;\n       return axios.get( API_URL + `/description/${eventName}/${idEvent}`)\n       },  \n/*\n    search: (search) => {\n     axios.defaults.withCredentials = true;\n     return axios.post( API_URL + '/home', qs.stringify(search),{headers: headers})\n    \n     }, */\n}","import React, { useState, useEffect } from 'react';\nimport eventAPI from '../../services/eventAPI';\n\nconst EventInfo = (props) => {\n    \n\n    const [events, setEvents] = useState([]);\n\n    let eventName = props.match.params.eventName; \n    let idEvent = props.match.params.idEvent;\n    \n    async function eventDetails() {  \n\n       const details = await eventAPI.eventInfo(eventName,idEvent)\n       .then(res => {\n           return res.data.eventsInfo;\n           \n       })\n       .catch(err => {\n          \n       });\n       setEvents(details);\n       \n       }\n   \n       useEffect(() => {\n       eventDetails();\n       }, []); \n\n    return (\n        <div className=\"eventInfo\">\n\n             <div>\n               <p><a href=\"javascript:history.go(-1)\">Retour</a></p>\n                 <div > \n                    { events['title'] } {events['start_time']} {events['city']} {events['region']}\n                    {events['description']} \n                    \n                    {events['links'] && events['links'][\"link\"].map((result) => <div key={result.id}> <a href={`${result.url}`} target=\"_blank\">Billeterie</a></div>)}\n                    \n\n                 </div>\n                \n                               \n        </div>\n        \n        </div>\n    )\n}\nexport default EventInfo;","import React, { useState} from 'react';\nimport { Redirect, Link} from 'react-router-dom';\nimport {Button, Input} from 'antd';\n//import './index.css';\n\nconst ForgetPassword = ({mail, error, onSubmit, init}) => {\n\n\n setTimeout(function () {\n    init();\n  }, 1000);\n\n \n  const [formState, setFormState] = useState({mail});\n \n \n  const handleChange = (e) => {\n      const name: string = e.target.mail;\n      const value: string = e.target.value;\n      setFormState({...formState, [name]: value}); // name_input : input_value\n      \n      \n    \n  }\n  const handleSubmit = (e) => {\n        e.preventDefault();\n    \n        onSubmit(formState);\n        \n        \n    }\n   \n     \n     \n    return (\n\n        <div className=\"form\"> \n\n        <h1>Réinitialisation de votre mot de passe</h1>< br/>\n        inscrivez votre mail\n        <form onSubmit={handleSubmit} action=\"/resetPassword\" method=\"POST\" >\n          <Input className=\"input\" name=\"mail\" placeholder=\"Entrer votre mail\" onChange={handleChange} value={formState.mail} required></Input>\n         \n          <button type=\"submit\" >envoyé</button>\n\n          <Link to=\"/connectez-vous\">Pas encore inscrit ?</Link>\n\n          <p>   {error}</p>\n        </form>\n        \n        </div>\n\n    )\n    \n}\n\nexport default ForgetPassword;","import userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    mail: '',\n };\n\n export const RESET_DEMAND_SUCCESS = \"ACCOUNT_SUCCESS\";\n export const RESET_DEMAND_ERROR = \"ACCOUNT_ERROR\";\n export const INIT = \"INIT\";\n\nconst reducer = (state = stateInitial, action : {type: string, payload : any}) => {\n    switch(action.type){\n        case RESET_DEMAND_SUCCESS: \n            return {\n                ...state, // = stateInitial\n                ...action.payload,// = overwrite stateInitial with data from appli\n                error: false\n\n            }\n        case RESET_DEMAND_ERROR:\n            return {\n                ...state,\n                error: \"Mail n'existe pas\",\n\n            }\n\n        \n        case INIT: \n            return {\n                ...state, \n                ...stateInitial,\n                error: false\n\n            }\n        default:\n            return state;\n    }\n}\n\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\n\nexport const resetPassword = (formState) => (dispatch, getState) => {\n    // name of the input\n  \n    // axios collect post info from the user via name input\n    return  userAPI.resetPassword(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(resetDemandSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            console.log(err)\n          \n            dispatch(resetDemandError());\n        });\n};\n\n\n\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\n\n\nexport const resetDemandSuccess = (payload) => ({\n    type: RESET_DEMAND_SUCCESS,\n    payload\n});\n\nexport const resetDemandError = () => ({\n    type: RESET_DEMAND_ERROR\n});\n\n\nexport const init = () => ({\n    type: INIT\n});\nexport default reducer;","import { connect } from 'react-redux';\nimport ForgetPassword from '../components/ForgetPassword';\nimport { resetPassword, init } from '../store/reducer/resetPassword-reducer';\n\nconst mapStateToProps =\n (state) => ({\n   mail: state.resetPassword.mail\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onSubmit: (formState) => {\n        dispatch(resetPassword(formState))\n    },\n    init: () => {\n        dispatch(init())\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgetPassword);","import React, { useState } from 'react';\nimport './index.css';\n\nconst Home = () => {\n    \n//userAPI.home();\n\n\n    return (\n        <div className=\"home\">\n        <div className=\"separator\"></div>\n         <h1> welcome </h1>\n           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras fringilla arcu vel urna rutrum viverra maximus vel risus. Integer sit amet sem hendrerit, porta diam a, blandit lorem. Pellentesque ut orci et dolor fringilla aliquam a ut mauris. Integer lacus tortor, scelerisque non sem ut, vulputate facilisis lorem. Mauris neque libero, efficitur eu metus in, gravida feugiat est. Cras eget ultricies est. Quisque augue nulla, dignissim ut pellentesque a, suscipit vitae nunc. Nullam sodales nibh tortor, non consequat tortor feugiat non. Morbi id orci venenatis, auctor ipsum ut, bibendum tellus. Etiam ante ex, dictum ut vulputate vel, suscipit et eros. Etiam eget leo vitae libero pulvinar sollicitudin. Maecenas et tellus elit. Nulla lorem purus, congue eu enim ac, faucibus mattis neque. Suspendisse diam diam, efficitur sit amet congue eget, hendrerit et erat.</p>\n           <p>Aliquam erat volutpat. Mauris tincidunt mauris a urna facilisis accumsan. Proin suscipit consequat leo, id fringilla nibh fringilla a. Donec vel porta purus. Aenean pulvinar sodales mattis. Curabitur eget imperdiet mi, et bibendum metus. Cras eget nisl diam. Pellentesque mattis sollicitudin mi, nec dictum diam euismod quis.</p>\n           <p>Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris malesuada turpis in purus molestie dictum. Suspendisse vel lorem luctus, elementum lorem ac, porta mi. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Integer dictum et leo eget fermentum. Ut bibendum orci massa, nec tincidunt nunc suscipit non. Maecenas orci enim, mattis placerat nisl ac, eleifend fringilla quam. Cras suscipit dolor nulla, vitae porttitor lectus auctor vitae.</p>\n           <p>Phasellus tortor dui, iaculis quis sem vitae, pulvinar sagittis quam. Maecenas placerat lorem ut efficitur molestie. Donec vitae ante non leo gravida viverra. Nullam sodales, risus eu rhoncus rutrum, risus tortor commodo ante, ac rhoncus dui magna ut nisi. Nunc quis tincidunt elit. Vestibulum et vehicula felis. Etiam tempus nec quam vel iaculis. Fusce vestibulum metus ut ipsum iaculis porta. Proin condimentum ex ac neque sagittis lobortis. Pellentesque dictum, velit sit amet viverra scelerisque, nisi sapien laoreet felis, ac blandit massa orci eu dolor. Sed sollicitudin neque in velit dictum, vel venenatis sem scelerisque. Cras in accumsan lorem, sed luctus tellus. Donec mollis neque a tincidunt feugiat.</p>\n           <p>Duis ac commodo nisi, elementum varius lectus. Curabitur molestie rutrum augue nec finibus. Aliquam erat volutpat. Sed tristique faucibus turpis ut mattis. Suspendisse potenti. Ut in ex libero. Vivamus sagittis, erat et hendrerit hendrerit, mi elit consectetur mauris, id elementum odio diam nec odio. Nulla bibendum, nisl eget commodo convallis, augue diam fermentum lacus, ac laoreet purus justo eu dolor. Aliquam erat volutpat. In a imperdiet nunc. Aenean ultricies nisi eget lorem pretium, aliquet pellentesque est dictum. Aliquam massa felis, faucibus sit amet libero sit amet, efficitur sollicitudin lorem. Phasellus vitae orci vel lectus convallis tempor sit amet sit amet nibh. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.</p>\n        \n        \n        </div>\n    )\n}\nexport default Home;","import React from 'react';\nimport { Redirect, Link} from 'react-router-dom';\nimport userAPI from '../../services/userAPI';\n\n\nconst Loggedout = ({loggedout, onClick, pseudo, display}) => {\n\n\ndisplay();\n\n\n  const logOut = () => {\n  \n  userAPI.logOut();\n   onClick();\n\n  }\n  if(loggedout) {\n    //clear local.storage\n     userAPI.logout();\n     window.location.replace(\"http://localhost:3000/\");\n   }\n\n    return (\n        <div>\n                <div>{pseudo}</div>\n                <div> <Link to=\"/compte\"> Mon compte</Link > </div>\n                <a href=\"/\" onClick={logOut}>déconnectez-vous</a>\n\n        </div>\n        \n    )\n    \n}\n  \n\n\nexport default Loggedout;","import userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    loggedout: false,\n    pseudo: ''\n };\n\n export const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\n export const LOGOUT_ERROR = \"LOGOUT_ERROR\";\n export const INIT = \"INIT\";\n  export const PSEUDO_SUCCESS = \"PSEUDO_SUCCESS\";\n export const PSEUDO_ERROR = \"PSEUDO_ERROR\";\n\nconst reducer = (state = stateInitial, action: {type: string, payload : any}) => {\n    switch(action.type){\n        case LOGOUT_SUCCESS: \n            return {\n                ...state, \n                loggedout: true,\n                error: false\n\n            }\n        case LOGOUT_ERROR:\n            return {\n                ...state,\n                loggedout: false,\n                error: \"Déconnexion non réussi\",\n\n            }\n        case PSEUDO_SUCCESS: \n            return {\n                ...state, // = stateInitial\n                ...action.payload,// = overwrite stateInitial with data from appli\n                error: false\n\n            }\n        case PSEUDO_ERROR:\n            return {\n                ...state,\n                error: \"affichage non réussi\",\n\n            }\n        \n        default:\n            return state;\n    }\n}\n\n \n\n\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\nexport const displayPseudo = () => (dispatch, getState) => {\n    \n\n    // collect user info\n    return  userAPI.pseudoUser()\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of PSEUDOController.displayPSEUDO\n            \n            dispatch(pseudoSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n \n            dispatch(pseudoError());\n        });\n};\n\n\n\nexport const logoutSuccess = () => ({\n    type: LOGOUT_SUCCESS,\n});\n\nexport const logoutError = () => ({\n    type: LOGOUT_ERROR,\n});\n\nexport const pseudoSuccess = (payload) => ({\n    type: PSEUDO_SUCCESS,\n    payload\n});\n\nexport const pseudoError = () => ({\n    type: PSEUDO_ERROR\n});\n\nexport default reducer;","import { connect } from 'react-redux';\nimport Loggedout from '../components/Loggedout';\nimport { logoutSuccess, displayPseudo } from '../store/reducer/loggedout-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   loggedout: state.loggedout.loggedout ,\n   pseudo: state.loggedout.pseudo, \n});\n\nconst mapDispatchToProps = (dispatch) => ({\n   onClick: () => {\n        dispatch(logoutSuccess());\n    },\n    display : () => {\n        dispatch(displayPseudo());\n    },\n  \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loggedout);","import React, { useState} from 'react';\nimport { Link} from 'react-router-dom';\nimport {Button, Input} from 'antd';\nimport userAPI from '../../services/userAPI';\n//import './index.css';\n\nconst Login = ({pseudo, password, onSubmit, loggedin, error, init}) => {\n\n\n setTimeout(function () {\n    init();\n  }, 1000);\n\n \n  const [formState, setFormState] = useState({pseudo, password, loggedin});\n \n \n  const handleChange = (e) => {\n      const name: string = e.target.name;\n      const value: string = e.target.value;\n      setFormState({...formState, [name]: value}); // name_input : input_value\n    \n  }\n\n  const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(formState);\n        \n    }\n   if(loggedin) {\n     //create local.sotorage\n     userAPI.login();\n     setTimeout(function () {\n      window.location.replace(\"http://localhost:3000/\");\n    }, 1000);\n   }\n     \n     \n    return (\n\n        <div className=\"form\"> \n\n        <h1>Connectez-Vous</h1>< br/>\n        \n        <form onSubmit={handleSubmit} action=\"/\">\n        <label htmlFor=\"pseudo\">Pseudo :  </label><Input className=\"input\" id=\"pseudo\" name=\"pseudo\" placeholder=\"Entrer votre pseudo\" onChange={handleChange} value={formState.pseudo} required></Input> < br/>< br/>\n        <label htmlFor=\"password\">Mot de passe : </label><Input className=\"input\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Entrer votre mot de passe\" onChange={handleChange} value={formState.password} required></Input> < br/>< br/>< br/>\n          <Button  htmlType=\"submit\" >Valider</Button>\n          <p>{error}<br/>  \n            <Link to=\"/inscrivez-vous\">Pas encore inscrit ?</Link>\n            <Link to=\"/mot-de-passe-oublie\">Mot de passe oublié ? ?</Link>\n            \n          </p> \n        </form>\n        \n        </div>\n\n    )\n    \n}\n\nexport default Login;","\nimport userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    pseudo: '',\n    password: '',\n    loggedin: false,\n    error: ''\n };\n\n export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\n export const LOGIN_ERROR = \"LOGIN_ERROR\";\n export const INIT = \"INIT\";\n \nconst reducer = (state = stateInitial, action : {type: string, payload: any}) => {\n    switch(action.type){\n        case LOGIN_SUCCESS:\n            return {\n                ...state,// = stateInitial\n                ...action.payload,// = overwrite stateInitial with data from appli\n                loggedin: true,\n                error: false,\n\n            }\n        case LOGIN_ERROR:\n            return {\n                ...state,\n                loggedin: false,\n                error: \"Connexion échoué\",\n\n            }\n        case INIT:\n            return {\n                ...state,\n                ...stateInitial,\n                loggedin: false,\n                error: false\n\n            }\n\n        default:\n            return state;\n    }\n};\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\nexport const login = (formState) => (dispatch, getState) => {\n\n    // axios check post info from the user\n    return userAPI.loginUser(formState)\n        .then(res => {\n            // inform my reducer this is a success\n            //and take data from response of auhtController.postLogin\n            dispatch(loginSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            if (err.response.data.text) {alert(err.response.data.text);}\n            dispatch(loginError());\n        })\n};\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store)\nexport const loginSuccess = (payload) => ({\n    type: LOGIN_SUCCESS,\n    payload\n});\n\nexport const loginError = () => ({\n    type: LOGIN_ERROR,\n});\n\nexport const init = () => ({\n    type: INIT\n});\n\n\nexport default reducer; ","import { connect } from 'react-redux';\nimport Login from '../components/Login';\nimport { login, init } from '../store/reducer/login-reducer';\n\n\n\n\nconst mapStateToProps =\n (state) => ({\n   pseudo: state.login.pseudo,\n    password: state.login.password,\n    loggedin: state.login.loggedin,\n    subscriber: state.login.subscriber,\n    error: state.login.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onSubmit: (formState) => {\n        dispatch(login(formState))\n        \n    },\n    init: () => {\n        dispatch(init())\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import validate from 'validate.js';\n\nconst displayError = (props) => {\n    const constraints = {\n           mail: {\n             presence: true,\n             format: {\n               pattern: /^[a-z0-9._-]+@[a-z0-9._-]{2,}\\.[a-z]{2,4}$/,\n               message: \": Format invalide\"\n             }\n           },\n            pseudo: {\n             presence: true,\n             length: {\n              minimum: 1000,\n              message: \": Doit contenir 8 caractères\"\n            }\n           }\n       };\n       //result = undefined if input is empty so let error for pseudo\n       const result = validate(props, constraints);\n       if (result)\n       console.log(\"result: \",result);\n   \n      return [result.mail];\n  } \n  \n  export default displayError;","import React, { useState } from 'react';\nimport {Link, useHistory } from 'react-router-dom';\nimport  displayError  from '../../lib/validationMail';\nimport {Input} from 'antd';\n// component = function return element to display\nconst Mail = ({mail,  error, onSubmit, init}) => {\n    const history = useHistory();\n\n    init();\n\n\n\n    const [formState, setFormState] = useState({mail});\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n     \n            \n    }\n\n   const result = displayError(formState); \n\n const handleSubmit = (e) => {\n        e.preventDefault();\n        \n       \n      \n        if (!result[0]) { \n          onSubmit(formState);\n           history.push(\"/compte\");\n        }\n        \n        \n   \n    }\n\n   \n\n    return (\n\n        <div className=\"setAccount\">\n        <h1>Modifier votre e-mail</h1>\n        <Link to=\"/compte\" className=\"return\"> Retour </Link>\n         <form onSubmit={handleSubmit} action=\"/update-mail\" method=\"POST\" >\n          <Input className=\"input\" name=\"mail\" placeholder=\"Entrer votre mail\" onChange={handleChange} value={formState.mail} required></Input>\n         \n          <button type=\"submit\" >< img src=\"../../../images/clap2.png\" alt=\"un clap de cinéma \" /></button>\n\n          <p> {result}  {error}</p>\n        </form>\n        \n        </div>\n\n    )\n    \n} \n\nexport default Mail;","import { connect } from 'react-redux';\nimport Mail from '../components/Mail';\nimport {  accountMail, init } from '../store/reducer/account-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   mail: state.account.mail,\n   update: state.account.update,\n   error: state.account.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n  onSubmit: (formState) => {\n        dispatch(accountMail(formState));// transfer input_name value ?\n    },\n  init: () => {\n      dispatch(init());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Mail);","import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu,  Switch } from 'antd';\n\nimport './index.css';\n\n\n\nconst Nav = () => {\n\n    const [theme, setTheme] = useState(null);\n    const [location, setLocation] = useState(\"france\");\n\n    const { SubMenu } = Menu;\n    \n    const dark = (value: any) => {\n\n               setTheme(value  ? 'dark' : 'light');    \n               const menu = document.getElementsByClassName('ant-menu')[0] as HTMLElement ;\n\n               const body = document.body;\n               body.classList.toggle('dark');\n       };\n       \n    return (\n        <div className=\"nav\">  \n      \n                 <Menu mode=\"horizontal\" className=\"menu\" theme={theme}>\n                       <SubMenu\n                             title={\n                        \n                                <Switch\n                                 onChange={dark}\n                                 checkedChildren=\"Dark\"\n                                 unCheckedChildren=\"Light\"\n                               /> \n                        \n                          }\n                        >  \n                        </SubMenu>\n\n                      <Menu.Item key=\"home\">\n                          <Link to=\"/\"> Accueil </Link>\n                        </Menu.Item>\n\n                       \n\n                        <Menu.Item key=\"today\">\n                         <Link to={`/${location}/aujourdhui`}> Aujourd'hui</Link >\n                        </Menu.Item>\n\n                        <Menu.Item key=\"week\">\n                         <Link to={`/${location}/semaine`}> La semaine</Link >\n                        </Menu.Item>\n\n                       \n                        \n                 </Menu>\n        </div>\n    )\n}\n\nexport default Nav;","import validate from 'validate.js';\n\nconst displayError = (props) => {\n    const constraints = {\n           password: {\n             presence: true,\n             length: {\n               minimum: 8,\n               message: \": Doit contenir 8 caractères\"\n             }\n           }, \n           pseudo: {\n             presence: true,\n             length: {\n              minimum: 1000,\n              message: \": Doit contenir 8 caractères\"\n            }\n           }\n       };\n       //result = undefined if input is empty so let error for pseudo\n       const result = validate(props, constraints);\n       if (result)\n       console.log(\"result: \",result);\n   \n      return [result.password];\n  } \n  \n  export default displayError;","import React, { useState } from 'react';\n//import './index.css';\nimport { Link, useHistory } from 'react-router-dom';\nimport  displayError  from '../../lib/validationPassword';\nimport {Input} from 'antd';\n// component = function return element to display\nconst NewPassword = ({password, error, onSubmit, init}) => {\n    const history = useHistory();\n    init();\n\n    console.log(\"states come from update:\", password, error);\n\n    const [formState, setFormState] = useState({password});\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n     \n            \n    }\n\n   const result = displayError(formState); \n\n const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if (!result[0]) { \n          onSubmit(formState);\n           history.push(\"/\");\n         \n        }\n      \n       \n   \n    }\n\n  \n   \n\n    return (\n\n        <div className=\"setAccount\">\n        <h1>Modifier votre mot de passe</h1>\n         <form onSubmit={handleSubmit} action=\"/newPassword\" method=\"POST\" >\n          <Input className=\"input\" name=\"password\" type=\"password\" placeholder=\"Entrer votre password\" onChange={handleChange} value={formState.password} required></Input>\n         \n          <button type=\"submit\"  >< img src=\"../../../images/clap2.png\" alt=\"clap de cinéma \" /></button>\n\n          <p>  {result} {error}</p>\n        </form>\n       \n        </div>\n\n    )\n    \n} \n\nexport default NewPassword;","import userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    mail: '',\n };\n\n export const RESET_PASSWORD_SUCCESS = \"ACCOUNT_SUCCESS\";\n export const RESET_PASSWORD_ERROR = \"ACCOUNT_ERROR\";\n export const INIT = \"INIT\";\n\nconst reducer = (state = stateInitial, action : {type: string, payload : any}) => {\n    switch(action.type){\n        case RESET_PASSWORD_SUCCESS: \n            return {\n                ...state, // = stateInitial\n                ...action.payload,// = overwrite stateInitial with data from appli\n                error: false\n\n            }\n        case RESET_PASSWORD_ERROR:\n            return {\n                ...state,\n                error: \"Mail n'existe pas\",\n\n            }\n\n        \n        case INIT: \n            return {\n                ...state, \n                ...stateInitial,\n                error: false\n\n            }\n        default:\n            return state;\n    }\n}\n\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\n\nexport const newPassword = (formState) => (dispatch, getState) => {\n    // name of the input\n  \n    // axios collect post info from the user via name input\n    return  userAPI.newPassword(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(resetPasswordSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            console.log(err);\n            dispatch(resetPasswordError());\n        });\n};\n\n\n\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\n\n\nexport const resetPasswordSuccess = (payload) => ({\n    type: RESET_PASSWORD_SUCCESS,\n    payload\n});\n\nexport const resetPasswordError = () => ({\n    type: RESET_PASSWORD_ERROR\n});\n\n\nexport const init = () => ({\n    type: INIT\n});\n\nexport default reducer;","import { connect } from 'react-redux';\nimport NewPassword from '../components/NewPassword';\nimport {  newPassword, init } from '../store/reducer/newPassword-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   password: state.newPassword.password\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n  onSubmit: (formState) => {\n        dispatch(newPassword(formState));// transfer input_name value ?\n    },\n  init: () => {\n      dispatch(init());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPassword);","import React from 'react';\n\nimport './index.css'\n\nconst NotFound = () => {\n\n    return (\n        <div className=\"ntf\"> \n        <h1>   \"404\" </h1>\n         \n        </div>\n    )\n}\n\nexport default NotFound;","import React, { useState } from 'react';\n//import './index.css';\nimport { Redirect, Link, useHistory } from 'react-router-dom';\nimport  displayError  from '../../lib/validationPassword';\nimport {Input} from 'antd';\n// component = function return element to display\nconst Password = ({password, error, onSubmit, init}) => {\n    const history = useHistory();\n    init();\n\n    console.log(\"states come from update:\", password, error);\n\n    const [formState, setFormState] = useState({password});\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n     \n            \n    }\n\n   const result = displayError(formState); \n\n const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if (!result[0]) { \n          onSubmit(formState);\n           <Redirect to=\"/compte\" />\n        }\n      \n       \n   \n    }\n     \n   \n\n    return (\n\n        <div className=\"setAccount\">\n        <h1>Modifier votre mot de passe</h1>\n        <Link to=\"/compte\" className=\"return\"> Retour </Link>\n         <form onSubmit={handleSubmit} action=\"/update-password\" method=\"POST\" >\n          <Input className=\"input\" name=\"password\" type=\"password\" placeholder=\"Entrer votre password\" onChange={handleChange} value={formState.password} required></Input>\n         \n          <button type=\"submit\"  >< img src=\"../../../images/clap2.png\" alt=\"clap de cinéma \" /></button>\n\n          <p>  {result} {error}</p>\n        </form>\n       \n        </div>\n\n    )\n    \n} \n\nexport default Password;","import { connect } from 'react-redux';\nimport Password from '../components/Password';\nimport {  accountPassword, init } from '../store/reducer/account-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   password: state.account.password,\n   update: state.account.update,\n   error: state.account.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n  onSubmit: (formState) => {\n        dispatch(accountPassword(formState));// transfer input_name value ?\n    },\n  init: () => {\n      dispatch(init());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Password);","import React from 'react';\nimport { Route,  Redirect } from 'react-router-dom';\nimport userAPI from '../../services/userAPI';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest} //contains the React Router props when the initial component is rendered\n    render={props => ( \n     userAPI.isAuth() ?  <Component {...props} /> : <Redirect to=\"/\" />\n      \n      )}\n  />\n);\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route,  Redirect } from 'react-router-dom';\nimport userAPI from '../../services/userAPI';\n\nconst PublicRoute = ({ component: Component,restricted, ...rest }) => (\n  <Route\n    {...rest} //contains the React Router props when the initial component is rendered\n    render={props => (\n      userAPI.isAuth() && restricted ? <Redirect to=\"/\" /> : <Component {...props} />\n      \n     )}\n  />\n);\n\nexport default PublicRoute;","\nimport validate from 'validate.js';\n\nconst displayError = (props) => {\n    const constraints = {\n           mail: {\n             presence: true,\n             format: {\n               pattern: /^[a-z0-9._-]+@[a-z0-9._-]{2,}\\.[a-z]{2,4}$/,\n               message: \": Format invalide\"\n             }\n           },\n           password: {\n             presence: true,\n             length: {\n               minimum: 8,\n               message: \": Doit contenir au moins 8 caractères\"\n             }\n           },\n           pseudo: {\n             presence: true,\n             length: {\n              minimum: 1000,\n              message: \": \"\n            }\n           }\n       };\n       //result = undefined if input is empty so let error for pseudo\n       const result = validate(props, constraints);\n       if (result)\n       console.log(\"result: \",result);\n   \n      return [result.mail, \" \", result.password];\n  } \n  \n  export default displayError;","import React, { useState } from 'react';\n//import './index.css';\nimport { Link, useHistory } from 'react-router-dom';\nimport  displayError  from '../../lib/validation';\nimport {Button, Input} from 'antd';\n\n// component = function return element to display\nconst Signup = ({pseudo, mail, password, onSubmit, error, init}) => {\n    \n    const history = useHistory();\n    setTimeout(function () {\n        init();\n    \n      }, 1000);\n\n\n    const [formState, setFormState] = useState({pseudo, mail, password});\n    const [validateMail, setValidateMail] = useState(true); \n    const [validatePassword, setValidatePassword] = useState(true); \n\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n       \n            \n    }\n\n   const result = displayError(formState); \n \n\n   const handleSubmit = (e) => {\n          e.preventDefault();\n          \n          if (result[0] === undefined && result[2] === undefined) { \n          onSubmit(formState);\n          history.push(\"/connectez-vous\");\n          }\n         result[0] ? setValidateMail(false): setValidateMail(true);\n          \n         result[2] ? setValidatePassword(false) : setValidatePassword(true);\n     \n      }\n     \n   \n\n    return (\n\n        <div className=\"form\"> \n\n        <h1>Inscrivez-vous</h1><br/>\n\n         <form onSubmit={handleSubmit} action=\"/signup\" method=\"POST\" >\n          <label htmlFor=\"pseudo\">Pseudo : </label><Input className=\"input\" id=\"pseudo\" name=\"pseudo\" placeholder=\"Entrer votre pseudo\" onChange={handleChange} value={formState.pseudo} required></Input> <br/>\n          <label htmlFor=\"mail\">E-mail : </label><Input className=\"input\" id=\"mail\" name=\"mail\" placeholder=\"Entrer votre e-mail\" onChange={handleChange} value={formState.mail} required></Input> <br/>\n          <label htmlFor=\"password\"> Mot de passe : </label><Input className=\"input\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Entrer votre mot de passe\" onChange={handleChange} value={formState.password} required></Input> < br/><br/>\n          <Button htmlType=\"submit\" >Valider</Button>\n          \n          { validateMail  ? \" \" : result[0]} { validatePassword  ? \" \" : result[2]} <p>  \n            <Link to=\"/connectez-vous\">Déjà inscrit ?</Link>\n          </p>\n        </form>\n        \n        </div>\n\n    )\n    \n} \n\nexport default Signup;","\nimport userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    pseudo: '',\n    mail: '',\n    password: '',\n };\n\n export const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\n export const SIGNUP_ERROR = \"SIGNUP_ERROR\";\n export const INIT = \"INIT\";\n\nconst reducer = (state = stateInitial, action : {type: string, payload : any}) => {\n    switch(action.type){\n        case SIGNUP_SUCCESS: \n            return {\n                ...state, // = stateInitial\n                ...action.payload,// = overwrite stateInitial with data frop appli\n                error: false\n\n            }\n        case SIGNUP_ERROR:\n            return {\n                ...state,\n                error: \"Inscription non réussi\",\n\n            }\n        case INIT:\n            return {\n                ...state,\n                ...stateInitial,\n                error: false\n\n            }\n\n        default:\n            return state;\n    }\n}\n\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\nexport const signUp = (formState) => (dispatch, getState) => {\n    // name of the input\n    // axios collect post info from the user via name input\n    return  userAPI.signupUser(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of auhtController.postSignup\n            \n            dispatch(signupSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            if (err.response.data.text) {\n                alert(err.response.data.text);\n                }\n            else if (err.response.data.error.keyValue.pseudo || err.response.data.error.keyValue.mail) {\n                alert((err.response.data.error.keyValue.pseudo ||  err.response.data.error.keyValue.mail) + \" existe déjà!\");\n                }\n                else {\n\n                }\n \n            dispatch(signupError());\n        });\n};\n\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\n\n\nexport const signupSuccess = (payload) => ({\n    type: SIGNUP_SUCCESS,\n    payload\n});\n\nexport const signupError = () => ({\n    type: SIGNUP_ERROR,\n});\n\nexport const init = () => ({\n    type: INIT\n});\nexport default reducer;","  \nimport { connect } from 'react-redux';\nimport Signup from '../components/Signup';\nimport { signUp, init } from '../store/reducer/signup-reducer';\n\n\n\nconst mapStateToProps =\n \n(state) => ({\n   pseudo: state.signup.pseudo, \n   mail: state.signup.mail,\n   password: state.signup.password,\n   subscriber: state.signup.subscriber,\n   error: state.signup.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n   onSubmit: (formState) => {\n        dispatch(signUp(formState));// transfer input_name value ?\n    },\n    init: () => {\n        dispatch(init())\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport eventAPI from '../../services/eventAPI';\n\nconst TodayEvents = () => {\n    \n    const [todayEvents, setTodayEvents] = useState([]);\n\n     async function TodayEventsList() { \n         const TodayEventsInfo = await eventAPI.todayEvents(\"france\")\n         .then(res => {\n          \n             return res.data.todayEvents.events.event;\n         })\n         .catch(err => {\n\n         });\n\n         // setting variable with the datacolected\n         setTodayEvents(TodayEventsInfo);\n     \n     }\n\n      useEffect(() => {\n       TodayEventsList();\n       }, []); \n\n    return (\n        <div className=\"todayEvent\">\n        <div>\n                {todayEvents.map((result) =>\n                 <div key={result.id}> \n                     {result.title}  {result.start_time}\n                     {result.venue_name} {result.venue_address} \n                     {result.city_name} {result.region_name} \n                     <Link to={`/description/${result.title}/${result.id}`}>Plus d'info</Link>\n                 </div>\n                 )} \n                               \n        </div>\n        </div>\n    )\n}\nexport default TodayEvents;","import React, { useState } from 'react';\n//import './index.css';\nimport { Link, useHistory } from 'react-router-dom';\nimport {Input} from 'antd';\n// component = function return element to display\nconst UserName = ({pseudo, update, error, onSubmit, init}) => {\n    const history = useHistory();\n    init();\n\n   \n\n    const [formState, setFormState] = useState({pseudo});\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n       \n            \n    }\n \n\n const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        onSubmit(formState);\n        history.push(\"/compte\");\n    }\n\n           \n     \n   \n\n    return (\n\n        <div className=\"setAccount\">\n        <h1>Modifier votre pseudo</h1>\n        <Link to=\"/compte\" className=\"return\">  Retour </Link>\n         <form onSubmit={handleSubmit} action=\"/updatepseudo\" method=\"POST\" >\n          <Input className=\"input\" name=\"pseudo\" placeholder=\"Entrer votre pseudo\" onChange={handleChange} value={formState.pseudo} required></Input>\n         \n          <button  type=\"submit\" >< img src=\"../../../images/clap2.png\" alt=\"un clap de cinéma \" /></button>\n\n          <p> {error}</p>\n\n        </form>\n        \n        </div>\n\n    )\n    \n} \n\nexport default UserName;","import { connect } from 'react-redux';\nimport UserName from '../components/UserName';\nimport {  accountPseudo, init } from '../store/reducer/account-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   pseudo: state.account.pseudo,\n   update: state.account.update,\n   error: state.account.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n  onSubmit: (formState) => {\n        dispatch(accountPseudo(formState));// transfer input_name value ?\n    },\n  init: () => {\n      dispatch(init());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserName);","import React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport eventAPI from '../../services/eventAPI';\n\nconst WeekEvents = () => {\n\n    const [weekEvents, setWeekEvents] = useState([]);\n\n     async function weekEventsList() { \n         const weekEventsInfo = await eventAPI.weekEvents(\"france\")\n         .then(res => {\n            \n             return res.data.weekEvents.events.event;\n         })\n         .catch(err => {\n\n         });\n\n         // setting variable with the datacolected\n         setWeekEvents(weekEventsInfo);\n     \n     }\n\n      useEffect(() => {\n       weekEventsList();\n       }, []); \n\n    return (\n        <div className=\"weekEvents\">\n\n        <div>\n                {weekEvents.map((result) =>\n                 <div key={result.id}> \n                     {result.title}  {result.start_time}\n                     {result.venue_name} {result.venue_address} \n                     {result.city_name} {result.region_name} \n                     <Link to={`/description/${result.title}/${result.id}`}>Plus d'info</Link>\n\n                 </div>\n                 )} \n                               \n        </div>\n        \n        </div>\n    )\n}\nexport default WeekEvents;","import React ,{useEffect} from 'react';\nimport { Route, Switch, Redirect, Link} from 'react-router-dom';\n\nimport './index.css';\n\n\nimport Account from '../../containers/Account';\nimport EventInfo from '../EventInfo';\nimport ForgetPassword from '../../containers/ForgetPassword';\nimport Home from '../Home';\nimport Loggedout from '../../containers/Loggedout';\nimport Login from '../../containers/Login';\nimport Mail from '../../containers/Mail';\nimport Nav from '../Nav';\nimport NewPassword from '../../containers/NewPassword';\nimport NotFound  from '../NotFound';\nimport Password from '../../containers/Password';\nimport PrivateRoute from '../PrivateRoute';\nimport PublicRoute from '../PublicRoute';\nimport Signup from '../../containers/Signup';\nimport TodayEvents from '../TodayEvents';\nimport UserName from '../../containers/UserName';\nimport WeekEvents from '../WeekEvents';\nimport userAPI from '../../services/userAPI';\n\nconst App = () => {\n\n  setInterval(function () {\n      userAPI.logout();\n    }, (60*60*1000));\n\n\n  \n const displayAuth = () => {\n       const auth = document.getElementsByClassName('auth')[0] as HTMLElement;\n       const un = document.getElementsByClassName('un')[0] as HTMLElement;\n        if(userAPI.isAuth()) {\n            auth.style.display='block';\n            un.style.display='none';\n          }\n          else {\n            auth.style.display='none';\n            un.style.display='block';\n          }\n\n        }\n  useEffect(() => {\n    displayAuth();\n  }, [])\n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n      <div className=\"brand-header\">\n\n           <div className=\"brand-name\">\n                World Wide Event\n           </div>\n\n           <div className=\"authentification\">\n\n              <div className=\"un authentificated\">\n               <Link to=\"/inscrivez-vous\"> signup</Link >                \n               <Link to=\"/connectez-vous\"> login</Link >\n              </div>\n              \n              <div className=\" auth authentificated\">\n                < Loggedout/>\n              </div>\n           </div>\n                   \n      </div>  \n         \n      </header>\n      <Nav />\n      <Switch>\n        <PublicRoute restricted={false} path=\"/\" exact component={Home}/>\n        <PublicRoute restricted={false} path=\"/:location/aujourdhui\" exact component={TodayEvents}/>\n        <PublicRoute restricted={false} path=\"/:location/semaine\" exact component={WeekEvents}/>\n        <PublicRoute restricted={false} path=\"/description/:eventName/:idEvent\" exact component={EventInfo}/>\n        <PrivateRoute path=\"/compte\" exact component={Account}/>\n        <PublicRoute restricted={true} path=\"/connectez-vous\" exact  component={Login}/>\n        <PublicRoute restricted={true} path=\"/mot-de-passe-oublie\" exact  component={ForgetPassword}/>\n        <PublicRoute restricted={true} path=\"/nouveau-mot-de-passe/:passwordResetToken\" exact  component={NewPassword}/>\n        <PrivateRoute path=\"/mise-a-jour-mail\" exact component={Mail} />\n        <PrivateRoute path=\"/mise-a-jour-mot-de-passe\" exact component={Password} />\n        <PublicRoute restricted={true} path=\"/inscrivez-vous\" exact  component={Signup} />\n        <PrivateRoute path=\"/mise-a-jour-pseudo\" exact component={UserName} />\n        <PublicRoute restricted={false}  path=\"/404\" exact component={NotFound}/>\n          <Redirect to=\"/404\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\n\nimport account from './account-reducer';\nimport loggedout from './loggedout-reducer';\nimport login from './login-reducer';\nimport signup from './signup-reducer';\nimport newPassword from './newPassword-reducer';\nimport resetPassword from './resetPassword-reducer';\n\nconst rootReducer = combineReducers({\n\n    account,\n    loggedout,\n    login,\n    newPassword,\n    resetPassword,\n    signup\n  \n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './reducer';\n\n\nconst store = createStore(rootReducer, applyMiddleware(reduxThunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport './index.css' \nimport App from './components/App';\n//import * as serviceWorker from './serviceWorker';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nconst ComponentToRender = () => (\n   <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n  </Provider>\n    \n);\nReactDOM.render(<ComponentToRender />, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}