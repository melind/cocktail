{"version":3,"sources":["services/userAPI/index.ts","components/Account/index.tsx","store/reducer/account-reducer.ts","containers/Account.ts","components/Admin/index.tsx","services/cocktailAPI/index.ts","components/CocktailsAlcoholic/index.tsx","components/CocktailsByIngredient/index.tsx","components/CocktailsNonAlcoholic/index.tsx","components/CocktailInfo/index.tsx","components/Confirm/index.tsx","store/reducer/confirm-reducer.ts","containers/Confirm.ts","components/Footer/index.tsx","lib/validationMail.ts","components/ForgetPassword/index.tsx","store/reducer/reset-reducer.ts","containers/ForgetPassword.ts","shaders/fireflies/vertex.js","shaders/fireflies/fragment.js","shaders/alcool/vertex.js","shaders/alcool/fragment.js","components/Home/index.tsx","icones/peche1.svg","components/LegalMentions/index.tsx","components/Login/index.tsx","store/reducer/login-reducer.ts","containers/Login.ts","components/Mail/index.tsx","containers/Mail.ts","components/Nav/index.tsx","lib/validationPassword.ts","components/NewPassword/index.tsx","store/reducer/newPassword-reducer.ts","containers/NewPassword.ts","components/NotFound/index.tsx","components/Password/index.tsx","containers/Password.ts","components/PrivateRoute/index.tsx","components/PublicRoute/index.tsx","components/ResendToken/index.tsx","containers/ResendToken.ts","lib/validation.ts","components/Signup/index.tsx","store/reducer/signup-reducer.ts","containers/Signup.ts","components/UserName/index.tsx","containers/UserName.ts","components/App/index.tsx","reportWebVitals.js","store/reducer/loggedout-reducer.ts","store/reducer/index.ts","store/index.ts","index.tsx"],"names":["headers","API_URL","process","token","axios","defaults","withCredentials","get","delete","user","localStorage","getItem","setItem","removeItem","formState","post","qs","stringify","put","Account","display","pseudo","mail","date","onClick","init","slice","handleInit","className","to","title","onConfirm","message","success","setTimeout","userAPI","window","location","replace","okText","cancelText","href","rel","stateInitial","password","error","ACCOUNT_SUCCESS","ACCOUNT_ERROR","UPDATE_SUCCESS","UPDATE_ERROR","DELETE_SUCCESS","DELETE_ERROR","RESEND_SUCCESS","RESEND_ERROR","INIT","accountSuccess","payload","type","accountError","updateSuccess","updateError","deleteSuccess","deleteError","resendSuccess","resendError","reducer","state","action","connect","account","dispatch","getState","then","res","data","catch","err","Admin","useState","users","setUsers","a","list","useEffect","usersList","map","result","_id","cocktail_name","ingredient","CocktailsAlcoholic","cocktails","setCocktails","loading","setLoading","cocktailAPI","cocktailsInfo","cocktailsList","Meta","Grid","strDrink","target","idDrink","src","strDrinkThumb","alt","CocktailsByIngredient","props","match","params","CocktailsNonAlcoholic","setcocktails","CocktailInfo","cocktail","setCocktail","cocktailName","drinks","details","cocktailDetails","quantity","number_ingredient","push","size","gutter","span","bordered","PreviewGroup","Confirm","confirmAccount","confirm","CONFIRM_SUCCESS","CONFIRM_ERROR","confirmSuccess","confirmError","reponse","alert","Footer","displayError","validate","presence","format","pattern","length","minimum","ForgetPassword","onSubmit","setFormState","e","preventDefault","method","name","placeholder","onChange","value","required","RESET_DEMAND_SUCCESS","RESET_DEMAND_ERROR","resetDemandSuccess","resetDemandError","reset","console","log","firefliesVertexShader","firefliesFragmentShader","alcoolVertexShader","alcoolFragmentShader","Home","cocktailRandom","randomCocktail","three","canvas","document","getElementsByClassName","scene","THREE","textureLoader","dracoLoader","DRACOLoader","setDecoderPath","gltfLoader","GLTFLoader","setDRACOLoader","bakedTexture","load","flipY","bakedMaterial","encoding","alcoolGeometry","alcoolMaterial","vertexShader","fragmentShader","uniforms","uTime","uBigWavesElevation","uBigWavesFrequency","uBigWavesSpeed","uSmallWavesElevation","uSmallWavesFrequency","uSmallWavesSpeed","uSmallIterations","uDepthColor","uSurfaceColor","uColorOffset","uColorMultiplier","alcool","rotation","x","Math","PI","position","y","add","gltf","children","find","child","material","firefliesGeometry","positionArray","Float32Array","firefliesCount","scaleArray","i","random","setAttribute","firefliesMaterial","uPixelRatio","min","devicePixelRatio","uSize","transparent","blending","depthWrite","fireflies","sizes","width","innerWidth","height","innerHeight","addEventListener","camera","aspect","updateProjectionMatrix","renderer","setSize","setPixelRatio","z","controls","OrbitControls","enableDamping","antialias","outputEncoding","setClearColor","clock","tick","elapsedTime","getElapsedTime","update","render","requestAnimationFrame","effect","beforeChange","autoplay","dots","LegalMentions","logo1","Login","loggedin","handleChange","password_input","getElementById","eye","htmlFor","id","getAttribute","classList","toggle","aria-hidden","htmlType","LOGIN_SUCCESS","LOGIN_ERROR","loginSuccess","loginError","login","subscriber","response","text","Mail","URL_ACCOUNT","REACT_APP_URL_ACCOUNT","keyValue","accountMail","Nav","inputValue_cocktail","inputValue_ingredient","theme","searchCocktail","setSearchCocktail","searchIngredient","setSearchIngredient","SubMenu","mode","Item","icon","SearchOutlined","NewPassword","passwordResetToken","confirm_password_input","confirmPassword","setCustomValidity","onKeyUp","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","resetPasswordSuccess","resetPasswordError","newPassword","msg","NotFound","Password","accountPassword","PrivateRoute","Component","component","rest","PublicRoute","restricted","ResendToken","resend","Signup","succeed","validateMail","setValidateMail","validatePassword","setValidatePassword","undefined","SIGNUP_SUCCESS","SIGNUP_ERROR","signupSuccess","signupError","signup","signUp","UserName","accountPseudo","App","setInterval","exact","strict","from","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","loggedout","LOGOUT_SUCCESS","LOGOUT_ERROR","PSEUDO_SUCCESS","PSEUDO_ERROR","rootReducer","combineReducers","store","createStore","applyMiddleware","reduxThunk","ComponentToRender","ReactDOM"],"mappings":"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","file":"static/js/main.19500ac1.chunk.js","sourcesContent":["  \nimport axios from 'axios';\nimport qs from 'qs';\n//import cookie from 'react-cookies';\nconst headers = {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n};\n\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\n\nexport default {\n\n    confirm: (token) => { \n        // @ts-ignore\n        axios.defaults.withCredentials = true;\n        return axios.get( API_URL + `/confirm/${token}`,{headers: headers})\n        }, \n    deleteUser: () => { \n        axios.defaults.withCredentials = true;\n        return axios.delete( API_URL + '/delete-account', {headers: headers})\n    },\n    deleteOtherUser: (user) => { \n        axios.defaults.withCredentials = true;\n        return axios.delete( API_URL + `/delete-other-account/${user}`, {headers: headers})\n    },\n    infoUser: () => { \n        axios.defaults.withCredentials = true;\n        return axios.get( API_URL + '/account')\n    }, \n\n    isAdmin: () => { \n        axios.defaults.withCredentials = true;\n        return  axios.get( API_URL + '/admin-938-kml')\n    },\n\n    isAuth: () => {\n         if (localStorage.getItem('login')) {\n         return true;\n        }\n         return false;\n    },\n\n    login: () => {\n        localStorage.setItem('login', 'Login');\n    },\n\n    logout: () => {\n       localStorage.removeItem('login');\n    },\n    \n    loginUser: (formState) => { \n        axios.defaults.withCredentials = true;\n        return axios.post( API_URL + '/login', qs.stringify(formState), {headers: headers})\n        },\n    \n    logOut: () => { \n        axios.defaults.withCredentials = true;\n        return axios.get( API_URL + '/logout')\n    },\n\n    newPassword: (token,formState) => { \n        // @ts-ignore\n        axios.defaults.withCredentials = true;\n        return axios.post( API_URL + `/new-password/${token}`, qs.stringify(formState),{headers: headers})\n        }, \n    pseudoUser: () => { \n        axios.defaults.withCredentials = true;\n        return axios.get( API_URL + '/')\n    }, \n    resendToken: (formState) => {\n        // @ts-ignore \n        return axios.post( API_URL + '/resend', qs.stringify(formState))\n    },\n    resetPassword: (formState) => {\n        // @ts-ignore \n        axios.defaults.withCredentials = true;\n        return axios.post( API_URL + '/reset-password', qs.stringify(formState),{headers: headers})\n    },\n\n    signupUser: (formState) => {\n        return axios.post( API_URL + '/signup', qs.stringify(formState), {headers: headers})\n    },\n   \n    updateMail: (formState) => { \n        axios.defaults.withCredentials = true;\n        return axios.put( API_URL + '/update-mail', qs.stringify(formState), {headers: headers})\n    },\n\n    updatePseudo: (formState) => { \n        axios.defaults.withCredentials = true;\n        return axios.put( API_URL + '/update-user-name', qs.stringify(formState), {headers: headers})\n    }, \n\n    updatePassword: (formState) => { \n        axios.defaults.withCredentials = true;\n        return axios.put( API_URL + '/update-password', qs.stringify(formState), {headers: headers})\n    }\n\n}","import React, { useState} from 'react';\nimport { Redirect, Link  } from 'react-router-dom';\nimport userAPI from '../../services/userAPI';\nimport { Tabs, Popconfirm, message } from 'antd';\nimport './index.css';\n\n\n \n\nconst Account = ({display, pseudo, mail, date, onClick, init}) => {\n\ndisplay();\nconst URL = process.env.REACT_APP_URL_HOME;\ndate = date.slice(0, 10);\n\n\nconst handleDelete = () => {\n  \n        onClick();\n        message.success('Suppression réussie !');\n        setTimeout(function () {\n           userAPI.logOut();\n           userAPI.logout();\n           window.location.replace(URL);\n         }, 1000);\n}\n\nconst handleInit = () => {\n    init();\n}\n\n\n\n\n    return (\n        <div className=\"account\"> \n        \n           \n            <div className=\"count\"> \n                 < h1>    My Account </h1>\n            </div>\n\n             Pseudo: {pseudo} < br/> \n             email: {mail} < br/>\n             sign up since: {date} < br/>< br/> < br/> \n\n            <Link to=\"/update-pseudo\" onClick={handleInit}>Set pseudo</Link> < br/>\n            <Link to=\"/update-mail\" onClick={handleInit}>Set your mail</Link> < br/>\n            <Link to=\"/update-password\" onClick={handleInit}>Set your password</Link>< br/>\n            < br/>< br/>\n       \n            <Popconfirm\n                title=\"Delete account ?\"\n                onConfirm={handleDelete}\n                okText=\"Yes\"\n                cancelText=\"No\"\n                className=\"popconfirm\"\n            >\n\n\n               <a href=\"#\" rel=\"noreferrer\"> Delete account</a>\n             </Popconfirm>\n\n        </div>\n    )\n}\n\nexport default Account;","\nimport userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    pseudo: '',\n    mail: '',\n    password: '',\n    date: '',\n    error: ''\n };\n\n export const ACCOUNT_SUCCESS = \"ACCOUNT_SUCCESS\";\n export const ACCOUNT_ERROR = \"ACCOUNT_ERROR\";\n export const UPDATE_SUCCESS = \"UPDATE_SUCCESS\";\n export const UPDATE_ERROR = \"UPDATE_ERROR\";\n export const DELETE_SUCCESS = \"DELETE_SUCCESS\";\n export const DELETE_ERROR = \"DELETE_ERROR\";\n export const RESEND_SUCCESS = \"RESEND_SUCCESS\";\n export const RESEND_ERROR = \"RESEND_ERROR\";\n export const INIT = \"INIT\";\n\nconst reducer = (state = stateInitial, action : {type: string, payload : any}) => {\n    switch(action.type){\n        case ACCOUNT_SUCCESS: \n            return {\n                ...state, // = stateInitial\n                ...action.payload,// = overwrite stateInitial with data from appli\n                error: false\n\n            }\n        case ACCOUNT_ERROR:\n            return {\n                ...state,\n                error: \"affichage non réussi\",\n\n            }\n\n        case UPDATE_SUCCESS: \n            return {\n                ...state, \n                ...action.payload,\n                error: false\n\n            }\n        case UPDATE_ERROR:\n            return {\n                ...state,\n                error: \"mise à jour non réussi\",\n\n            }\n        case DELETE_SUCCESS: \n            return {\n                ...state, \n                ...stateInitial,\n                error: false\n\n            }\n        case DELETE_ERROR:\n            return {\n                ...state,\n                error: \"désinscription non réussi\",\n\n            }\n        case RESEND_SUCCESS: \n            return {\n                ...state, \n                ...stateInitial,\n                error: false\n\n            }\n        case RESEND_ERROR:\n            return {\n                ...state,\n                error: \"No user\",\n\n            }\n        case INIT: \n            return {\n                ...state, \n                ...stateInitial,\n                \n\n            }\n        default:\n            return state;\n    }\n}\n\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\nexport const displayAccount = () => (dispatch, getState) => {\n    \n\n    // collect user info\n    return  userAPI.infoUser()\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.displayAccount\n            \n            dispatch(accountSuccess(res.data.user));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n \n            dispatch(accountError());\n        });\n};\n\nexport const accountPseudo = (formState) => (dispatch, getState) => {\n    // name of the input\n  \n    // axios collect post info from the user via name input\n    return  userAPI.updatePseudo(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(updateSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            if (err.response.data.error.keyValue.pseudo ) {\n                alert((err.response.data.error.keyValue.pseudo)  + \" existe déjà!\");};\n          \n            dispatch(updateError());\n        });\n};\n\nexport const accountMail = (formState) => (dispatch, getState) => {\n    // name of the inputateInitial\n    \n    // axios collect post info from the user via name input\n    return  userAPI.updateMail(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(updateSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n      \n            if (err.response.data.error.keyValue.mail) {\n                alert((err.response.data.error.keyValue.mail) + \" existe déjà!\");};\n          \n            dispatch(updateError());\n        });\n};\n\n\nexport const accountPassword = (formState) => (dispatch, getState) => {\n    // name of the input\n    // axios collect post info from the user via name input\n    return  userAPI.updatePassword(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(updateSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n          \n            dispatch(updateError());\n        });\n};\n\nexport const deleteAccount = () => (dispatch, getState) => {\n   \n    return  userAPI.deleteUser()\n        .then( (res) => {\n            // inform my reducer this is a success \n            \n            dispatch(deleteSuccess());\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            dispatch(deleteError());\n        });\n};\n\nexport const resend = (formState) => (dispatch, getState) => {\n    // name of the inputateInitial\n    \n    // axios collect post info from the user via name input\n    return  userAPI.resendToken(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(resendSuccess());\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n      \n            if (err) {\n                 alert(\"No user\")};\n          \n            dispatch(resendError());\n        });\n};\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\n\n\nexport const accountSuccess = (payload) => ({\n    type: ACCOUNT_SUCCESS,\n    payload\n});\n\nexport const accountError = () => ({\n    type: ACCOUNT_ERROR\n});\n\nexport const updateSuccess = (payload) => ({\n    type: UPDATE_SUCCESS,\n    payload\n});\n\nexport const updateError = () => ({\n    type: UPDATE_ERROR\n});\n\n\nexport const deleteSuccess = () => ({\n    type: DELETE_SUCCESS\n});\n\nexport const deleteError = () => ({\n    type: DELETE_ERROR\n});\n\nexport const resendSuccess = () => ({\n    type: RESEND_SUCCESS\n});\n\nexport const resendError = () => ({\n    type: RESEND_ERROR\n});\n\nexport const init = () => ({\n    type: INIT\n});\nexport default reducer;","import { connect } from 'react-redux';\nimport Account from '../components/Account';\nimport { displayAccount, init, deleteAccount } from '../store/reducer/account-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   pseudo: state.account.pseudo, \n   mail: state.account.mail,\n   password: state.account.password,\n   date: state.account.date,\n   error: state.account.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  display : () => {\n        dispatch(displayAccount());\n    },\n  init: () => {\n      dispatch(init());\n  },\n  onClick: () => {\n      dispatch(deleteAccount());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);","import React, {useState, useEffect} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport userAPI from '../../services/userAPI';\nimport { Tabs, Popconfirm, message, Button } from 'antd';\nimport './index.css';\n\nconst Admin = () => {\n\n    const [users, setUsers] = useState([]);\n    async function usersList() { \n        const list = await userAPI.isAdmin()\n        .then(res => {\n           \n                   \n            return res.data.users;\n            \n        })\n        .catch(err => {\n\n            return err\n        });\n\n        setUsers(list);\n    }\n\n\n   const handleDelete = (user) => {\n            \n          \n            userAPI.deleteOtherUser(user);\n            message.success('Suppression réussie !');\n           /* setTimeout(function () {\n                document.location.reload();\n         }, 1000);\n         \n         use tulip or record*/\n}\n        useEffect(() => {\n            usersList();\n            \n            }, []); \n     \n\n            \n          \n            \n    return (\n        <div className=\"admin\">\n            <h1>Hello admin !</h1> <br/><br/> \n            <p>Liste des abonnés</p>\n             <ul>{users && users.map((result) => \n                 <li key={result._id}>{result.pseudo} delete account \n                  <Popconfirm\n                        title=\"Delete account ?\"\n                        onConfirm={() => handleDelete(result.pseudo)}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                        className=\"popconfirm\">\n                         <br/><a href=\"#\" rel=\"noreferrer\"> DELETE</a>\n                 </Popconfirm> </li>\n              \n                 )}\n            </ul>\n        \n        </div>\n    )\n}\n\nexport default Admin;","import axios from 'axios';\nimport qs from 'qs';\nconst headers = {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n};\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\n\nexport default { \n\n    cocktailInfo: (cocktail_name) => {\n        axios.defaults.withCredentials = false;\n        return axios.get( API_URL + `/cocktail/${cocktail_name}`)\n        },\n    \n    cocktailRandom: () => {\n        axios.defaults.withCredentials = false;\n        return axios.get( API_URL + '/home')\n        },\n\n    cocktailsA: () => {\n        axios.defaults.withCredentials = false;\n        return axios.get( API_URL + '/cocktails_alcoholic')\n        },    \n    cocktailsByIngredient: (ingredient) => {\n        axios.defaults.withCredentials = false;\n        return axios.get( API_URL + `/cocktails_by_ingredient/${ingredient}`)\n        },\n    cocktailsNA: () => {\n       axios.defaults.withCredentials = true;\n       return axios.get( API_URL + '/cocktails_non_alcoholic')\n       }\n\n}","import React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport cocktailAPI from '../../services/cocktailAPI';\nimport { Card, BackTop, Image } from 'antd';\nimport './index.css';\nconst CocktailsAlcoholic = () => {\n    \n    const [cocktails, setCocktails] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n     async function cocktailsList() { \n         const cocktailsInfo = await cocktailAPI.cocktailsA()\n         .then(res => {\n         \n             return res.data.cocktails;\n         })\n         .catch(err => {\n\n         });\n\n         // setting variable with the datacolected\n         setCocktails(cocktailsInfo);\n         setLoading(false);\n     \n     }\n\n      useEffect(() => {\n       cocktailsList();\n       }, []); \n\n       \n        const { Meta } = Card;\n      \n        \n\n    return (\n        <div className=\"cocktailInfo screen\">\n            \n               <div>\n              \n                    <Card   loading={loading}>\n                          {cocktails['drinks'] && cocktails['drinks'].map((result) =>\n\n                     \n                          <Card.Grid className=\"grid\"  key={result.idDrink}>\n                         \n                           <Link   to={`/cocktail/${result.strDrink}`} target=\"_parent\" key={result.idDrink}>\n                                      <p>{result.strDrink}</p>\n                           </Link>\n                            <Image  className=\"grid_name\"\n                              \n                              src={`${result.strDrinkThumb}`} alt=\"cocktail\"\n                            />\n                          </Card.Grid>\n\n                      )} \n                    </Card>  \n                                     \n                 </div>\n\n                   <BackTop>\n                     <div className=\"up\">UP</div>\n                   </BackTop>\n        </div>\n    )\n}\nexport default CocktailsAlcoholic;","import React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport cocktailAPI from '../../services/cocktailAPI';\nimport { Card, Image, BackTop } from 'antd';\n\nconst CocktailsByIngredient = (props) => {\n    \n\n    const [cocktails, setCocktails] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    let ingredient = props.match.params.ingredient; \n    \n    async function cocktailsList() {  \n\n       const list = await cocktailAPI.cocktailsByIngredient(ingredient)\n       .then(res => {\n           \n           return res.data.cocktails;\n           \n       })\n       .catch(err => {\n         return err\n       });\n       setCocktails(list);\n       setLoading(false);\n       \n       }\n   \n       useEffect(() => {\n       cocktailsList();\n       }, []); \n       \n      \n\n        const { Meta } = Card;\n      \n    return (\n        <div className=\"cocktailsByIngredient screen\">\n\n             <div>\n               <p><a href=\"javascript:history.go(-1)\">Retour</a></p>\n                 <div > \n         \n                    \n                   \n                    <Card title=\"\"  loading={loading}>\n                          {cocktails['drinks'] && cocktails['drinks'].map((result) =>\n\n                     \n                          <Card.Grid   className=\"grid\" key={result.idDrink}>\n                                 <Link  to={`/cocktail/${result.strDrink}`} target=\"_parent\" key={result.idDrink}>\n                                      <p>{result.strDrink}</p>\n                                 </Link>\n                            <Image\n                              className=\"grid_image\"\n                              src={`${result.strDrinkThumb}`} alt=\"cocktail\"\n                            />\n                          </Card.Grid>\n\n                      \n                      )} \n                    </Card> \n                  \n                 </div>\n                <BackTop>\n                 <div className=\"up\">UP</div>\n                </BackTop>\n                               \n        </div>\n        \n        </div>\n    )\n}\nexport default CocktailsByIngredient;","import React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport cocktailAPI from '../../services/cocktailAPI';\nimport { Card,  Image, BackTop } from 'antd';\n\nconst CocktailsNonAlcoholic = () => {\n\n    const [cocktails, setcocktails] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n     async function cocktailsList() { \n         const cocktailsInfo = await cocktailAPI.cocktailsNA()\n         .then(res => {\n            \n             return res.data.cocktails;\n         })\n         .catch(err => {\n\n         });\n\n         // setting variable with the datacolected\n         setcocktails(cocktailsInfo);\n         setLoading(false);\n     \n     }\n\n      useEffect(() => {\n       cocktailsList();\n       }, []); \n\n       \n      \n\n    return (\n        <div className=\"cocktails screen\">\n\n        <div>\n                <Card  className=\"card\" loading={loading}>\n                          {cocktails['drinks'] && cocktails['drinks'].map((result) =>\n\n                     \n                          <Card.Grid  className=\"grid\" key={result.idDrink}>\n                           \n                            <Link  to={`/cocktail/${result.strDrink}`} target=\"_parent\" key={result.idDrink}>\n                                      <p>{result.strDrink}</p>\n                            </Link>\n                            <Image className=\"grid_image\"\n                              src={`${result.strDrinkThumb}`} alt=\"cocktail\"\n                            />\n                          </Card.Grid>\n\n                      )} \n                    </Card>  \n                               \n        </div>\n        <BackTop>\n           <div className=\"up\">UP</div>\n         </BackTop>\n        </div>\n    )\n}\nexport default CocktailsNonAlcoholic;","import React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport cocktailAPI from '../../services/cocktailAPI';\nimport { Card, Col, Row, Image, Spin  } from 'antd';\n\nconst CocktailInfo = (props) => {\n    \n\n    const [cocktail, setCocktail] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    let cocktailName = props.match.params.cocktail_name; \n    \n    async function cocktailDetails() {  \n\n       const details = await cocktailAPI.cocktailInfo(cocktailName)\n       .then(res => {\n           return res.data.cocktail.drinks[0];\n           \n           \n       })\n       .catch(err => {\n          \n       });\n       setCocktail(details);\n       setLoading(false);\n       \n       }\n   \n       useEffect(() => {\n       cocktailDetails();\n       }, []); \n       let ingredient = [];\n       let quantity = [];\n       let image = [];\n       //let ingredients = [];\n       let number_ingredient = 1;\n       for (number_ingredient = 1; number_ingredient < 16; number_ingredient++) {\n                           \n           if (cocktail[`strIngredient${number_ingredient}`] != null) {\n             //ingredients.push([cocktail[`strIngredient${number_ingredient}`]], [cocktail[`strMeasure${number_ingredient}`] ]);\n                   ingredient.push(cocktail[`strIngredient${number_ingredient}`])\n                   quantity.push(cocktail[`strMeasure${number_ingredient}`]);\n            }\n         }\n\n    return (\n        <div className=\"cocktailInfo screen\">\n\n             <div>\n               <p><a href=\"javascript:history.go(-1)\">Retour</a></p>\n                 <div >\n                   \n                          {loading ?      \n                          \n                             (<div className=\"spin\"><Spin size=\"large\" /></div>)\n                            \n                              :\n                             ( <Card title={ cocktail['strDrink'] } >\n                      \n                                <Image className=\"cocktailInfo_image\"\n                                      \n                                      src={cocktail['strDrinkThumb']} alt=\"cocktail\"\n                                    />\n\n                             </Card >\n                              )}\n                             <Row gutter={4}>\n                                    <Col span={8}>\n                                      <Card title=\"Ingredients\" bordered={false}>\n                                       {ingredient.map((result) => \n                                        <p>{result}</p> )}\n                                      </Card>\n                                    </Col>\n\n                                    <Col span={8}>\n                                      <Card title=\"Quantity\" bordered={false}>\n                                         {quantity.map((result) => \n                                        <p>{result}</p> )}\n                                      </Card>\n                                    </Col>\n\n                                    <Col span={8}>\n                                      <Card title=\"images\" bordered={false}>\n                                        {ingredient.map((result) => \n                                         <Image.PreviewGroup >\n                                         \n                                                <Image\n                                                  className=\"cocktailInfo_image_ingredient\"\n                                                  src={`https://www.thecocktaildb.com/images/ingredients/${result}.png`} alt=\"liquor\"\n                                                />\n\n                                            </Image.PreviewGroup>\n                                        )}\n                                      </Card>\n                                    </Col>\n                               </Row>\n                           \n                               {cocktail['strInstructions']}\n\n                 </div>\n                \n                               \n        </div>\n        \n        </div>\n    )\n}\nexport default CocktailInfo;","import React, {useEffect} from 'react';\nimport { Link} from 'react-router-dom';\n//import './index.css';\n\nconst Confirm = (props, { init, confirmAccount,confirm, error}) => {\n \n   \n    let token = props.match.params.token;\n    \n   \n    \n    useEffect(() => {\n      props.init();\n      props.confirmAccount(token);\n      }, []);\n\n    return (\n\n        <div className=\"confirm form\">\n        <h1>Account Confirm</h1>\n\n        { props.confirm  ? (<div>You can login</div>) : (<div>{props.error} <br/><Link to=\"/resend-email\">resend confirmation link . </Link></div>)}\n       \n        </div>\n\n    )\n    \n} \n\nexport default Confirm;","import userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n   confirm: false,\n   error: false,\n };\n\n export const CONFIRM_SUCCESS = \"CONFIRM_SUCCESS\";\n export const CONFIRM_ERROR = \"CONFIRM_ERROR\";\n export const INIT = \"INIT\";\n\nconst reducer = (state = stateInitial, action : {type: string, payload : any}) => {\n    switch(action.type){\n        case CONFIRM_SUCCESS: \n            return {\n                ...state, // = stateInitial\n                confirm: true,// = overwrite stateInitial with data from appli\n                error: false\n\n            }\n        case CONFIRM_ERROR:\n            return {\n                ...state,\n                confirm: false,\n                error: \"An error occur ?\"\n\n            }\n\n        \n        case INIT: \n            return {\n                ...state, \n                ...stateInitial\n\n            }\n        default:\n            return state;\n    }\n}\n\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\n\nexport const confirm = (token) => (dispatch, getState) => {\n    // name of the input\n  \n    // axios collect post info from the user via name input\n    return  userAPI.confirm(token)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of CONFIRMController.updateCONFIRM\n                \n                 dispatch(confirmSuccess(res.data || \"\"));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            if(err && err.reponse.data.type ){\n                alert( err.reponse.data.type)\n            }\n            \n            dispatch(confirmError());\n        });\n};\n\n\n\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\n\n\nexport const confirmSuccess = (payload) => ({\n    type: CONFIRM_SUCCESS,\n    payload\n});\n\nexport const confirmError = () => ({\n    type: CONFIRM_ERROR\n});\n\n\nexport const init = () => ({\n    type: INIT\n});\nexport default reducer;","import { connect } from 'react-redux';\nimport Confirm from '../components/Confirm';\nimport {  confirm, init } from '../store/reducer/confirm-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   confirm: state.confirm.confirm,\n   error: state.confirm.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n  confirmAccount: (token) => {\n        dispatch(confirm(token));// transfer input_name value ?\n    },\n  init: () => {\n      dispatch(init());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirm);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.css';\n\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      \n      <p>Contact: melinda@pechemelba.fr</p>\n      <Link to=\"/legal-mentions\">Mentions Legales</Link>\n    </div>\n  );\n}\n\nexport default Footer;","import validate from 'validate.js';\n\nconst displayError = (props) => {\n    const constraints = {\n           mail: {\n             presence: true,\n             format: {\n               pattern: /^[a-z0-9._-]+@[a-z0-9._-]{2,}\\.[a-z]{2,4}$/,\n               message: \": Format invalid\"\n             }\n           },\n            pseudo: {\n             presence: true,\n             length: {\n              minimum: 1000,\n              message: \": Password must have at least 8 characters\"\n            }\n           }\n       };\n       //result = undefined if input is empty so let error for pseudo\n       const result = validate(props, constraints);\n       if (result)\n       \n   \n      return [result.mail];\n  } \n  \n  export default displayError;","import React, { useState } from 'react';\nimport {Link } from 'react-router-dom';\nimport  displayError  from '../../lib/validationMail';\nimport {Input, Button} from 'antd';\n// component = function return element to display\n\nconst ForgetPassword = ({mail,  error, onSubmit, init}) => {\n\n\n\n    init();\n\n\n \n  const [formState, setFormState] = useState({mail});\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n     \n            \n    }\n\n  const result = displayError(formState); \n  const handleSubmit = (e) => {\n        e.preventDefault();\n    \n       \n        if (!result[0]) { \n          onSubmit(formState);\n        }\n        \n    }\n   \n     \n     \n    return (\n\n        <div className=\"form\"> \n\n        <h1>Reset Password</h1>< br/>\n        Enter your email\n        <form onSubmit={handleSubmit} action=\"/reset-password\" method=\"POST\" >\n          <Input className=\"input\" name=\"mail\" placeholder=\"Enter votre mail\" onChange={handleChange} value={formState.mail} required></Input>\n         \n          <button type=\"submit\" >Send</button>\n\n         \n\n          <p>  {result} {error}</p>\n        </form>\n        \n        </div>\n\n    )\n    \n}\n\nexport default ForgetPassword;","import userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    mail: '',\n };\n\n export const RESET_DEMAND_SUCCESS = \"ACCOUNT_SUCCESS\";\n export const RESET_DEMAND_ERROR = \"ACCOUNT_ERROR\";\n export const INIT = \"INIT\";\n\nconst reducer = (state = stateInitial, action : {type: string, payload : any}) => {\n    switch(action.type){\n        case RESET_DEMAND_SUCCESS: \n            return {\n                ...state, // = stateInitial\n                ...action.payload,// = overwrite stateInitial with data from appli\n                error: false\n\n            }\n        case RESET_DEMAND_ERROR:\n            return {\n                ...state,\n                error: \"Mail n'existe pas\",\n\n            }\n\n        \n        case INIT: \n            return {\n                ...state, \n                ...stateInitial,\n                error: false\n\n            }\n        default:\n            return state;\n    }\n}\n\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\n\nexport const reset = (formState) => (dispatch, getState) => {\n    // name of the input\n  \n    // axios collect post info from the user via name input\n    return  userAPI.resetPassword(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(resetDemandSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            console.log(err)\n          \n            dispatch(resetDemandError());\n        });\n};\n\n\n\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\n\n\nexport const resetDemandSuccess = (payload) => ({\n    type: RESET_DEMAND_SUCCESS,\n    payload\n});\n\nexport const resetDemandError = () => ({\n    type: RESET_DEMAND_ERROR\n});\n\n\nexport const init = () => ({\n    type: INIT\n});\nexport default reducer;","import { connect } from 'react-redux';\nimport ForgetPassword from '../components/ForgetPassword';\nimport { reset, init } from '../store/reducer/reset-reducer';\n\nconst mapStateToProps =\n (state) => ({\n   mail: state.reset.mail\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onSubmit: (formState) => {\n        dispatch(reset(formState))\n    },\n    init: () => {\n        dispatch(init())\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgetPassword);","const firefliesVertexShader = () => { \n\n    return `uniform float uPixelRatio;\n            uniform float uSize;\n            attribute float aScale;\n            uniform float uTime;\n\n            void main() \n            {\n                vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n                modelPosition.y += sin(uTime + modelPosition.x * 100.0)  * aScale * 0.2;\n                vec4 viewPosition = viewMatrix * modelPosition;\n                vec4 projectionPosition = projectionMatrix * viewPosition;\n            \n                gl_Position = projectionPosition;\n            \n                gl_PointSize = uSize * aScale * uPixelRatio;\n                gl_PointSize *= (1.0 / - viewPosition.z);\n            }`\n\n}\n\nexport default firefliesVertexShader;","const firefliesFragmentShader = () => { \n\n      return ` void main()\n        {\n            float distanceToCenter = distance(gl_PointCoord, vec2(0.5));\n            float strength = 0.05 / distanceToCenter - (0.05 * 2.0 );\n            gl_FragColor = vec4(1.0, 1.0, 1.0, strength);\n        }`\n\n}\n\nexport default firefliesFragmentShader;","const  alcoolVertexShader = () => {\n \n    return  `\n      uniform float uTime;\n  uniform float uBigWavesElevation;\n  uniform vec2 uBigWavesFrequency;\n  uniform float uBigWavesSpeed;\n  \n  uniform float uSmallWavesElevation;\n  uniform float uSmallWavesFrequency;\n  uniform float uSmallWavesSpeed;\n  uniform float uSmallIterations;\n  \n  varying float vElevation;\n  \n  // Classic Perlin 3D Noise \n  // by Stefan Gustavson\n  //\n  vec4 permute(vec4 x)\n  {\n      return mod(((x*34.0)+1.0)*x, 289.0);\n  }\n  vec4 taylorInvSqrt(vec4 r)\n  {\n      return 1.79284291400159 - 0.85373472095314 * r;\n  }\n  vec3 fade(vec3 t)\n  {\n      return t*t*t*(t*(t*6.0-15.0)+10.0);\n  }\n  \n  float cnoise(vec3 P)\n  {\n      vec3 Pi0 = floor(P); // Integer part for indexing\n      vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n      Pi0 = mod(Pi0, 289.0);\n      Pi1 = mod(Pi1, 289.0);\n      vec3 Pf0 = fract(P); // Fractional part for interpolation\n      vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n      vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n      vec4 iy = vec4(Pi0.yy, Pi1.yy);\n      vec4 iz0 = Pi0.zzzz;\n      vec4 iz1 = Pi1.zzzz;\n  \n      vec4 ixy = permute(permute(ix) + iy);\n      vec4 ixy0 = permute(ixy + iz0);\n      vec4 ixy1 = permute(ixy + iz1);\n  \n      vec4 gx0 = ixy0 / 7.0;\n      vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n      gx0 = fract(gx0);\n      vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n      vec4 sz0 = step(gz0, vec4(0.0));\n      gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n      gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n  \n      vec4 gx1 = ixy1 / 7.0;\n      vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n      gx1 = fract(gx1);\n      vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n      vec4 sz1 = step(gz1, vec4(0.0));\n      gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n      gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n  \n      vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n      vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n      vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n      vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n      vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n      vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n      vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n      vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n  \n      vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n      g000 *= norm0.x;\n      g010 *= norm0.y;\n      g100 *= norm0.z;\n      g110 *= norm0.w;\n      vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n      g001 *= norm1.x;\n      g011 *= norm1.y;\n      g101 *= norm1.z;\n      g111 *= norm1.w;\n  \n      float n000 = dot(g000, Pf0);\n      float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n      float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n      float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n      float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n      float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n      float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n      float n111 = dot(g111, Pf1);\n  \n      vec3 fade_xyz = fade(Pf0);\n      vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n      vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n      float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n      return 2.2 * n_xyz;\n  }\n  \n  void main()\n  {\n      vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n  \n      // Elevation\n      float elevation = sin(modelPosition.x * uBigWavesFrequency.x + uTime * uBigWavesSpeed) *\n                        sin(modelPosition.z * uBigWavesFrequency.y + uTime * uBigWavesSpeed) *\n                        uBigWavesElevation;\n  \n      for(float i = 1.0; i <= uSmallIterations; i++)\n      {\n          elevation -= abs(cnoise(vec3(modelPosition.xz * uSmallWavesFrequency * i, uTime * uSmallWavesSpeed)) * uSmallWavesElevation / i);\n      }\n      \n      modelPosition.y += elevation;\n  \n      vec4 viewPosition = viewMatrix * modelPosition;\n      vec4 projectedPosition = projectionMatrix * viewPosition;\n      gl_Position = projectedPosition;\n  \n      vElevation = elevation;\n  }\n      `\n  }\n\n  export default alcoolVertexShader;","const alcoolFragmentShader = () => {\n  \n    return   `\n       uniform vec3 uDepthColor;\n  uniform vec3 uSurfaceColor;\n  uniform float uColorOffset;\n  uniform float uColorMultiplier;\n  \n  varying float vElevation;\n  \n  void main()\n  {\n      float mixStrength = (vElevation + uColorOffset) * uColorMultiplier;\n      vec3 color = mix(uDepthColor, uSurfaceColor, mixStrength);\n      \n      gl_FragColor = vec4(color, 1.0);\n  }\n       `\n   }\n\nexport default alcoolFragmentShader;","import React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport cocktailAPI from '../../services/cocktailAPI';\nimport {Carousel, Image, Card, Spin, Space} from 'antd';\nimport './index.css';\n\n\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js'\nimport firefliesVertexShader from '../../shaders/fireflies/vertex.js'\nimport firefliesFragmentShader from '../../shaders/fireflies/fragment.js'\nimport alcoolVertexShader from '../../shaders/alcool/vertex.js'\nimport alcoolFragmentShader from '../../shaders/alcool/fragment.js'\nconst Home = () => {\n\n    const [cocktail, setCocktail] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    async function cocktailRandom() {  \n\n        const randomCocktail = await cocktailAPI.cocktailRandom()\n        .then(res => { \n            return res.data.cocktail.drinks[0];\n            \n        })\n        .catch(err => {\n           return err\n        });\n        setCocktail(randomCocktail);\n        setLoading(false);\n        }\n    \n        useEffect(() => {\n        cocktailRandom();\n        three()\n        }, []); \n     \n/**\n *   THREE JS\n */\n\nconst three = () => { \n /**\n  * Base\n  */\n \n // Canvas\n const canvas = document.getElementsByClassName('webgl')[0];//document.querySelector('canvas.webgl')\nif (canvas){ \n // Scene\n const scene = new THREE.Scene()\n \n /**\n  * Loaders\n  */\n // Texture loader\n const textureLoader = new THREE.TextureLoader()\n \n // Draco loader\n const dracoLoader = new DRACOLoader()\n dracoLoader.setDecoderPath('draco/')\n \n // GLTF loader\n const gltfLoader = new GLTFLoader()\n gltfLoader.setDRACOLoader(dracoLoader)\n \n /**\n  * Textures\n  */\n  const bakedTexture = textureLoader.load('../../texture_cocktail.jpg')\n  bakedTexture.flipY = false\n \n /**\n  * Materials\n  */\n // Baked material\n const bakedMaterial = new THREE.MeshBasicMaterial({ map: bakedTexture /* to backside be visible, side: THREE.DoubleSide*/ })\n bakedTexture.encoding = THREE.sRGBEncoding\n \n const alcoolGeometry = new THREE.PlaneGeometry(50, 50, 52, 212) \n // Colors\n \n const alcoolMaterial = new THREE.ShaderMaterial({\n     vertexShader: alcoolVertexShader(),\n     fragmentShader: alcoolFragmentShader(),\n     uniforms:\n     {\n         uTime: { value: 0 },\n         \n         uBigWavesElevation: { value: 0.277 },\n         uBigWavesFrequency: { value: new THREE.Vector2(0, 0.183) },\n         uBigWavesSpeed: { value: 0.826 },\n \n         uSmallWavesElevation: { value: 0.135 },\n         uSmallWavesFrequency: { value: 2.96 },\n         uSmallWavesSpeed: { value: 0.83 },\n         uSmallIterations: { value: 3 },\n \n         uDepthColor: { value: new THREE.Color('#009bdc') },\n         uSurfaceColor: { value: new THREE.Color('#5cb9f7') },\n         uColorOffset: { value: 0.08 },\n         uColorMultiplier: { value: 5 }\n     }\n })\n\n const alcool = new THREE.Mesh(alcoolGeometry, alcoolMaterial)\n alcool.rotation.x = - Math.PI * 0.5\n //alcool.position.z = -26.5\n alcool.position.y = -0.5\n scene.add(alcool)\n /**\n  * Model\n  */\n\n gltfLoader.load(\n     '../../cocktail_scene_allin.glb',\n    \n     (gltf) => {\n         /**\n          * // traverse the whole scene if not merge in one mesh\n                 gltf.scene.traverse((child) =>\n                 {\n                     child.material = bakedMaterial\n                 })\n \n          \n          */\n         \n         scene.add(gltf.scene)\n         const bakedMesh = gltf.scene.children.find((child) => child.name === 'Plane005') //name of mesh in collection\n         bakedMesh.material = bakedMaterial\n         \n     }\n     \n )\n \n /**\n  * Fireflies\n  */\n \n // Geometry\n \n const firefliesGeometry = new THREE.BufferGeometry()\n const firefliesCount = 30\n const positionArray = new Float32Array(firefliesCount * 3) //x,y,z\n const scaleArray = new Float32Array(firefliesCount)\n \n for(let i = 0; i < firefliesCount; i++)\n {\n     positionArray[i * 3 + 0] = (Math.random() -0.5 ) * 4 //x\n     positionArray[i * 3 + 1] = Math.random() * 4 //y high\n     positionArray[i * 3 + 2] = (Math.random() -0.5) * 4 //z depth\n \n     scaleArray[i] = Math.random()\n }\n \n firefliesGeometry.setAttribute('position', new THREE.BufferAttribute(positionArray, 3))// how many values for a vertex\n firefliesGeometry.setAttribute('aScale', new THREE.BufferAttribute(scaleArray, 1))\n // Material\n const firefliesMaterial = new THREE.ShaderMaterial({\n     uniforms:\n     {\n         uPixelRatio: { value: Math.min(window.devicePixelRatio, 2) } ,//to have same size according to space use ratio\n         uSize: { value: 100 },\n         uTime: { value: 0 },\n     },\n     vertexShader: firefliesVertexShader(),\n     fragmentShader: firefliesFragmentShader(),\n     transparent: true,\n     blending: THREE.AdditiveBlending,\n     depthWrite: false, //save depthbufffer that behind a particule exist to avoid this late to be erased\n \n  })\n\n // Points\n const fireflies = new THREE.Points(firefliesGeometry, firefliesMaterial)\n scene.add(fireflies)\n \n /**\n  * Sizes\n  */  \n \n const sizes = {\n     width: window.innerWidth - 100,\n     height: window.innerHeight / 2\n\n   \n }\n \n window.addEventListener('resize', () =>\n {\n     // Update sizes\n     sizes.width = window.innerWidth - 100\n     sizes.height = window.innerHeight / 2\n     // Update camera\n     camera.aspect = sizes.width / sizes.height\n     camera.updateProjectionMatrix()\n \n     // Update renderer\n     renderer.setSize(sizes.width, sizes.height)\n     renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n \n     // Update fireflies\n     firefliesMaterial.uniforms.uPixelRatio.value = Math.min(window.devicePixelRatio, 2) // to be always good according to  device ratio\n })\n \n /**\n  * Camera\n  */\n // Base camera\n const camera = new THREE.PerspectiveCamera(25, sizes.width / sizes.height, 0.1, 30)\n camera.position.x = 0\n camera.position.y = 5\n camera.position.z = 18\n scene.add(camera)\n \n // Controls\n const controls = new OrbitControls(camera, canvas)\n controls.enableDamping = true\n //\n /**\n  * Renderer\n  */\n const renderer = new THREE.WebGLRenderer({\n   canvas,\n     antialias: true\n })\n renderer.setSize(sizes.width, sizes.height)\n renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n renderer.outputEncoding = THREE.sRGBEncoding\n \n // Clear color\n renderer.setClearColor('#74c8f7')\n \n \n /**\n  * Animate\n  */\n const clock = new THREE.Clock()\n \n const tick = () =>\n {\n     const elapsedTime = clock.getElapsedTime()\n \n     // Update materials\n     firefliesMaterial.uniforms.uTime.value = elapsedTime\n \n     alcoolMaterial.uniforms.uTime.value = elapsedTime\n \n     // Update controls\n     controls.update()\n \n     // Render\n     renderer.render(scene, camera)\n \n     // Call tick again on the next frame\n     window.requestAnimationFrame(tick)\n }\n \n tick()\n}\n}\n    return (\n        <div className=\"home screen\">\n\n             <p className='welcome'> A Cocktail...... ?</p>\n\n            <canvas className=\"webgl\"></canvas>\n\n          <br></br>  <p className='try'>Try this one : </p>\n   \n          {loading ? \n                 (<div className=\"spin\">\n                 <Space size=\"middle\">\n                     <Spin size=\"small\" />\n                     <Spin />\n                     <Spin size=\"large\" />\n                  </Space>\n                  </div>) \n                  :\n                   (<Carousel effect='fade'  beforeChange={cocktailRandom} autoplay dots={false}  >\n                        <div>\n                            \n                                <Link   to={`/cocktail/${ cocktail['strDrink'] }`} target=\"_parent\" >\n                                         <p>{ cocktail['strDrink'] } </p>\n                                </Link>\n                                <Image\n                                         width={300}\n                                         src={`${cocktail['strDrinkThumb']}`}  alt=\"cocktail\"\n                                       />\n                              \n                           \n         \n                      </div>\n                      <div>\n                                <Link  to={`/cocktail/${ cocktail['strDrink'] }`} target=\"_parent\" >\n                                         <p>{ cocktail['strDrink'] } </p>\n                                </Link>\n                                <Image\n                                         width={300}\n                                         src={`${cocktail['strDrinkThumb']}`}  alt=\"cocktail\"\n                                       />\n                             \n         \n                      </div>\n   \n                      <div>\n                                <Link   to={`/cocktail/${ cocktail['strDrink'] }`} target=\"_parent\" >\n                                         <p>{ cocktail['strDrink'] } </p>\n                                </Link>\n                                <Image\n                                         width={300}\n                                         src={`${cocktail['strDrinkThumb']}`}  alt=\"cocktail\"\n                                       />\n                           \n         \n                      </div>\n                      \n                </Carousel> )}   \n                  \n                  <p className='description'>You're looking for a cocktail ? Want some inspiration ? You got  ingredients and do know what to do with ?\n                    This website is for you !\n                  </p>\n                \n       </div>\n        \n    )\n}\nexport default Home;","export default __webpack_public_path__ + \"static/media/peche1.8b3d4015.svg\";","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.css';\nimport logo1 from '../../icones/peche1.svg';\n\nconst LegalMentions = () => {\n\n    return (\n        \n       \n        <div className=\"mentions\">\n            \n            \n            <div className=\"logo-ml\">\n                                    <img src={logo1} width=\"200\" alt=\"pêche melba icone\"/>\n                                   \n            </div>\n        \n\n            <p>MENTIONS LEGALES :</p>\n\n    <p>Conformément aux dispositions des articles 6-III et 19 de la Loi n° 2004-575 du 21 juin 2004 pour la Confiance dans l'économie numérique, dite L.C.E.N., nous portons à la connaissance des utilisateurs et visiteurs du site : <a href=\"https://cocktail.pechemelba.fr\" target=\"_blank\" rel=\"noopener noreferrer\">cocktail.pechemelba.fr</a> les informations suivantes :</p>\n\n    <p><strong>1. Informations légales :</strong></p>\n\n    <p>Statut du propriétaire : <strong>particulier</strong><br />\nLe Propriétaire est : <strong>Mélinda MENDY</strong><br />\nAdresse postale du propriétaire : <strong></strong><br />\n <br />\nLe Créateur du site est : <strong>Mélinda MENDY</strong><br />\nLe Responsable de la  publication est : <strong>Mélinda MENDY</strong><br />\nContacter le responsable de la publication : <strong>melinda@pechemelba.fr</strong><br />\nLe responsable de la publication est une<strong> personne physique</strong><br />\n    <br />\nLe Webmaster est  : <strong>Mélinda MENDY</strong><br />\nContacter le Webmaster :  <strong><a href=\"mailto:melinda@pechemelba.fr?subject=Contact a partir des mentions lÃ©gales via le site cocktail.pechemelba.fr\">melinda@pechemelba.fr</a></strong><br />\nL’hebergeur du site est : <strong>cocktail.pechemelba.fr </strong><br />\n    <strong><u>CREDIT :</u> </strong> Les mentions légales ont étés générées par<strong> <a href=\"https://www.generer-mentions-legales.com/generateur-mentions-legales.html\" target=\"_blank\" rel=\"noopener noreferrer\">générateur de mentions legales</a></strong><br />\nUne eau toujours potable avec les <strong><a href=\"https://www.chamarrel.com/perles-de-ceramique-em-pxl-29_37.html\">perles de céramique</a></strong></p>\n\n    <p> </p>\n\n    <p><strong>2. Présentation et principe :</strong></p>\n\n    <p>Est désigné ci-après : <strong>Utilisateur</strong>, tout internaute se connectant et utilisant le site susnommé : <a href=\"https://cocktail.pechemelba.fr\" target=\"_blank\" rel=\"noopener noreferrer\">cocktail.pechemelba.fr</a>.<br />\nLe site <strong>cocktail.pechemelba.fr</strong><strong> </strong>regroupe un ensemble de services, dans l'état,  mis à la disposition des utilisateurs. Il est ici précisé que ces derniers doivent rester courtois et faire preuve de bonne foi tant envers les autres utilisateurs qu'envers le webmaster du site cocktail.pechemelba.fr. Le site cocktail.pechemelba.fr est mis à jour régulièrement par Mélinda MENDY.<br />\nMélinda MENDY s’efforce de fournir sur le site cocktail.pechemelba.fr des informations les plus précises possibles (sous réserve de modifications apportées depuis leur mise en ligne), mais ne saurait garantir l'exactitude, la complétude et l'actualité des informations diffusées sur son site, qu’elles soient de son fait ou du fait des tiers partenaires qui lui fournissent ces informations. En conséquence, l'utilisateur reconnaît utiliser ces informations données (à titre indicatif, non exhaustives et susceptibles d'évoluer) sous sa responsabilité exclusive.</p>\n\n    <p> </p>\n\n    <p><strong>3. Accessibilité :</strong><br />\n    <br />\nLe site cocktail.pechemelba.fr est par principe accessible aux utilisateurs 24/24h, 7/7j, sauf interruption, programmée ou non, pour les besoins de sa maintenance ou en cas de force majeure. En cas d’impossibilité d’accès au service, cocktail.pechemelba.fr s’engage à faire son maximum afin de rétablir l’accès au service et s’efforcera alors de communiquer préalablement aux utilisateurs les dates et heures de l’intervention.  N’étant soumis qu’à une obligation de moyen, cocktail.pechemelba.fr ne saurait être tenu pour responsable de tout dommage, quelle qu’en soit la nature, résultant d’une indisponibilité du service.</p>\n\n    <p> </p>\n\n    <p><strong>4. Propriété intellectuelle :</strong></p>\n\n    <p><br />\nMélinda MENDY est propriétaire exclusif de tous les droits de propriété intellectuelle ou détient les droits d’usage sur tous les éléments accessibles sur le site, tant sur la structure que sur les textes, images, graphismes, logo, icônes, sons, logiciels… (sauf ceux signalés).<br />\nToute reproduction totale ou partielle du site www.cocktail.pechemelba.fr, représentation, modification, publication, adaptation totale ou partielle de l'un quelconque de ces éléments, quel que soit le moyen ou le procédé utilisé, est interdite, sauf autorisation écrite préalable de Mélinda MENDY, propriétaire du site à l'email : melinda@pechemelba.fr, à défaut elle sera considérée comme constitutive d’une contrefaçon et passible de poursuite conformément aux dispositions des articles L.335-2 et suivants du Code de Propriété Intellectuelle.</p>\n\n    <p><br />\n    <strong>5. Liens hypertextes et cookies :</strong><br />\n    <br />\nLe site cocktail.pechemelba.fr contient un certain nombre de liens hypertextes vers d’autres sites (partenaires, informations …) mis en place avec l’autorisation de Mélinda MENDY. Cependant, Mélinda MENDY n’a pas la possibilité de vérifier l'ensemble du contenu des sites ainsi visités et décline donc toute responsabilité de ce fait quand aux risques éventuels de contenus illicites.<br />\nL’utilisateur est informé que lors de ses visites sur le site cocktail.pechemelba.fr, un ou des cookies sont susceptibles de s’installer automatiquement sur son ordinateur par l'intermédiaire de son logiciel de navigation. Un cookie est un bloc de données qui ne permet pas d'identifier l'utilisateur, mais qui enregistre des informations relatives à la navigation de celui-ci sur le site. <br />\nLe paramétrage du logiciel de navigation permet d’informer de la présence de cookie et éventuellement, de la refuser de la manière décrite à l’adresse suivante : <a href=\"http://www.cnil.fr\">www.cnil.fr</a>. L’utilisateur peut toutefois configurer le navigateur de son ordinateur pour refuser l’installation des cookies, sachant que le refus d'installation d'un cookie peut entraîner l’impossibilité d’accéder à certains services. Pour tout bloquage des cookies, tapez dans votre moteur de recherche : bloquage des cookies sous IE ou firefox et suivez les instructions en fonction de votre version.</p>\n\n    <p><br />\n    <strong>6. Protection des biens et des personnes - gestion des données personnelles :</strong><br />\n    <br />\nEn France, les données personnelles sont notamment protégées par la loi n° 78-87 du 6 janvier 1978, la loi n° 2004-801 du 6 août 2004, l'article L. 226-13 du Code pénal et la Directive Européenne du 24 octobre 1995.</p>\n\n    <p>Sur le site cocktail.pechemelba.fr, Mélinda MENDY ne collecte des informations personnelles ( suivant l'article 4 loi n°78-17 du 06 janvier 1978) relatives à l'utilisateur que pour le besoin de certains services proposés par le site cocktail.pechemelba.fr. L'utilisateur fournit ces informations en toute connaissance de cause, notamment lorsqu'il procède par lui-même à leur saisie. Il est alors précisé à l'utilisateur du site cocktail.pechemelba.fr l’obligation ou non de fournir ces informations.<br />\nConformément aux dispositions des articles 38 et suivants de la loi 78-17 du 6 janvier 1978 relative à l’informatique, aux fichiers et aux libertés, tout utilisateur dispose d’un droit d’accès, de rectification, de suppression et d’opposition aux données personnelles le concernant. Pour l’exercer, adressez votre demande à cocktail.pechemelba.fr par email : <strong><a href=\"mailto:melinda@pechemelba.fr?subject=Contact ï¿½ partir des mentions lï¿½gales via le site cocktail.pechemelba.fr\">melinda@pechemelba.fr</a></strong> ou par écrit dûment signée, accompagnée d’une copie du titre d’identité avec signature du titulaire de la pièce, en précisant l’adresse à laquelle la réponse doit être envoyée.</p>\n\n    <p>Aucune information personnelle de l'utilisateur du site cocktail.pechemelba.fr n'est publiée à l'insu de l'utilisateur, échangée, transférée, cédée ou vendue sur un support quelconque à des tiers. Seule l'hypothèse du rachat du site cocktail.pechemelba.fr et de ses droits autorise Mélinda MENDY à transmettre les dites informations à l'éventuel acquéreur qui serait à son tour tenu à la même obligation de conservation et de modification des données vis à vis de l'utilisateur du site cocktail.pechemelba.fr.<br />\nLe site cocktail.pechemelba.fr est en conformité avec le RGPD voir notre politique RGPD  A venir.</p>\n\n    <p>Les bases de données sont protégées par les dispositions de la loi du 1er juillet 1998 transposant la directive 96/9 du 11 mars 1996 relative à la protection juridique des bases de données.</p>\n\n\n           \n        </div>\n        \n    )\n}\nexport default LegalMentions;","import React, { useState, useEffect} from 'react';\nimport { Link} from 'react-router-dom';\nimport {Button, Input} from 'antd';\nimport userAPI from '../../services/userAPI';\n//import './index.css';\n\nconst Login = ({pseudo, password, onSubmit, loggedin, error, init}) => {\n\n \n\n  const URL = process.env.REACT_APP_URL_HOME;\n  const [formState, setFormState] = useState({pseudo, password, loggedin});\n \n \n  const handleChange = (e) => {\n      const name: string = e.target.name;\n      const value: string = e.target.value;\n      setFormState({...formState, [name]: value}); // name_input : input_value\n    \n  }\n\n  const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(formState);\n        \n    }\n   if(loggedin) {\n     //create local.sotorage\n     \n     setTimeout(function () {\n      userAPI.login();\n      window.location.replace(URL);\n    }, 1000);\n   }\n\n   let password_input = document.getElementById(\"password\") as HTMLInputElement;\n   let eye = document.getElementById(\"eye\") ;\n     \n    \n   const toggle = ()  => {\n     const type = password_input.getAttribute('type') === 'password' ? 'text' : 'password';\n     password_input.setAttribute('type', type);\n     eye.classList.toggle(\"fa-eye-slash\")\n   }\n \n   useEffect(() => {\n    init();\n    }, []);\n\n    return (\n\n        <div className=\"form\"> \n\n        <h1>Login</h1>< br/>\n        \n        <form onSubmit={handleSubmit} action=\"/login\" >\n        <label htmlFor=\"pseudo\">Pseudo :  </label>< br/><Input className=\"input\" id=\"pseudo\" name=\"pseudo\" placeholder=\"Entrer votre pseudo\" onChange={handleChange} value={formState.pseudo} required></Input> < br/>< br/>\n        <label htmlFor=\"password\">password : </label>< br/><Input className=\"input\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Entrer votre mot de passe\" onChange={handleChange} value={formState.password} required></Input><i id=\"eye\" onClick={toggle} className=\"fa fa-eye \" aria-hidden=\"true\"></i> < br/>< br/>< br/>\n          <Button  htmlType=\"submit\" >Submit</Button>\n          <p>{error}<br/>  \n            <Link to=\"/signup\">Not already signed up ? </Link>\n            <Link to=\"/forget-passord\">forgot password ? </Link>\n            <Link to=\"/resend-email\">resend confirmation email ? </Link>\n            \n          </p> \n        </form>\n        \n        </div>\n\n    )\n    \n}\n\nexport default Login;","\nimport userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    pseudo: '',\n    password: '',\n    loggedin: false,\n    error: ''\n };\n\n export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\n export const LOGIN_ERROR = \"LOGIN_ERROR\";\n export const INIT = \"INIT\";\n \nconst reducer = (state = stateInitial, action : {type: string, payload: any}) => {\n    switch(action.type){\n        case LOGIN_SUCCESS:\n            return {\n                ...state,// = stateInitial\n                ...action.payload,// = overwrite stateInitial with data from appli\n                loggedin: true,\n                error: false,\n\n            }\n        case LOGIN_ERROR:\n            return {\n                ...state,\n                loggedin: false,\n                error: \"Connexion failed\",\n\n            }\n        case INIT:\n            return {\n                ...state,\n                ...stateInitial,\n                loggedin: false,\n                error: false\n\n            }\n\n        default:\n            return state;\n    }\n};\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\nexport const login = (formState) => (dispatch, getState) => {\n\n    // axios check post info from the user\n    return userAPI.loginUser(formState)\n        .then(res => {\n            // inform my reducer this is a success\n            //and take data from response of auhtController.postLogin\n            dispatch(loginSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            if (err.response.data.text) {alert(err.response.data.text);}\n            dispatch(loginError());\n        })\n};\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store)\nexport const loginSuccess = (payload) => ({\n    type: LOGIN_SUCCESS,\n    payload\n});\n\nexport const loginError = () => ({\n    type: LOGIN_ERROR,\n});\n\nexport const init = () => ({\n    type: INIT\n});\n\n\nexport default reducer; ","import { connect } from 'react-redux';\nimport Login from '../components/Login';\nimport { login, init } from '../store/reducer/login-reducer';\n\n\n\n\nconst mapStateToProps =\n (state) => ({\n   pseudo: state.login.pseudo,\n    password: state.login.password,\n    loggedin: state.login.loggedin,\n    subscriber: state.login.subscriber,\n    error: state.login.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onSubmit: (formState) => {\n        dispatch(login(formState))\n        \n    },\n    init: () => {\n        dispatch(init())\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useState } from 'react';\nimport {Link } from 'react-router-dom';\nimport  displayError  from '../../lib/validationMail';\nimport {Input} from 'antd';\n// component = function return element to display\nconst Mail = ({mail,  error, onSubmit, init}) => {\n    const URL_ACCOUNT = process.env.REACT_APP_URL_ACCOUNT;\n\n    init();\n\n\n\n    const [formState, setFormState] = useState({mail});\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n     \n            \n    }\n\n   const result = displayError(formState); \n\n const handleSubmit = (e) => {\n        e.preventDefault();\n        \n       \n      \n        if (!result[0]) { \n          onSubmit(formState);\n         \n          \n        }\n        \n        \n   \n    }\n    if(error === false) {\n         window.location.replace(URL_ACCOUNT);\n      }\n   \n\n    return (\n\n        <div className=\"setAccount form\">\n        <h1>Set your e-mail</h1>\n        <Link to=\"/account\" className=\"return\"> Back </Link>\n         <form onSubmit={handleSubmit} action=\"/update-mail\" method=\"POST\" >\n          <Input className=\"input\" name=\"mail\" placeholder=\"Enter votre mail\" onChange={handleChange} value={formState.mail} required></Input>\n         \n          <button type=\"submit\" >Submit</button>\n\n          <p> {result}  {error}</p>\n        </form>\n        \n        </div>\n\n    )\n    \n} \n\nexport default Mail;","import { connect } from 'react-redux';\nimport Mail from '../components/Mail';\nimport {  accountMail, init } from '../store/reducer/account-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   mail: state.account.mail,\n   update: state.account.update,\n   error: state.account.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n  onSubmit: (formState) => {\n        dispatch(accountMail(formState));// transfer input_name value ?\n    },\n  init: () => {\n      dispatch(init());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Mail);","import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu,  Switch, Button, Input } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport './index.css';\n\n\n\nconst Nav = () => {\n\n    const [theme, setTheme] = useState(null);\n    const [searchCocktail, setSearchCocktail] = useState(\"\");\n    const [searchIngredient, setSearchIngredient] = useState(\"\");\n    const { SubMenu } = Menu;\n    \n    const dark = (value: any) => {\n\n               setTheme(value  ? 'dark' : 'light');    \n               const menu = document.getElementsByClassName('ant-menu')[0] as HTMLElement ;\n\n               const body = document.body;\n               body.classList.toggle('dark');\n       };\n\n        let inputValue_cocktail;\n        let inputValue_ingredient;\n\n        const handleChange_cocktail = (e) => {\n          \n          const value: string = e.target.value;\n          inputValue_cocktail = value;\n          setSearchCocktail(value);\n                   // name_input : input_value\n              \n       }\n       const handleChange_ingredient = (e) => {\n          \n          const value: string = e.target.value;\n          inputValue_ingredient = value;\n          setSearchIngredient(value);\n                   // name_input : input_value\n              \n       }\n   \n        const handleSubmit_cocktail = (e) => {\n          \n           window.location.replace(`cocktail/${searchCocktail}`);\n        }\n        const handleSubmit_ingredient = (e) => {\n         \n           window.location.replace(`cocktails_by_ingredient/${searchIngredient}`);\n        }\n       /** <SubMenu\n                             title={\n                        \n                                <Switch\n                                 onChange={dark}\n                                 checkedChildren=\"Dark\"\n                                 unCheckedChildren=\"Light\"\n                               /> \n                        \n                          }\n                        >  \n                        </SubMenu> */\n    return (\n        <div className=\"nav\">  \n      \n                 <Menu mode=\"horizontal\" className=\"menu\" theme={theme}>\n                      \n\n                      <Menu.Item key=\"home\">\n                          <Link to=\"/home\"> Accueil </Link>\n                        </Menu.Item>\n\n                        <Menu.Item key=\"cocktailA\">\n                         <Link to='/cocktails_alcoholic'> Cocktail</Link >\n                        </Menu.Item>\n \n                        <Menu.Item key=\"cocktailNA\">\n                         <Link to='/cocktails_non_alcoholic'> Cocktail Non alcoholic</Link >\n                        </Menu.Item>\n  \n                 </Menu>\n                        <div className=\"search\">\n                          \n                           <div className=\"search_info\">\n                               <label htmlFor=\"cocktail_name\"> Cocktail name : </label><Input className=\"input_search\"  name=\"cocktail\"  placeholder=\"cocktail name\" onChange={handleChange_cocktail} value={inputValue_cocktail}  ></Input> \n                               <Button    icon={<SearchOutlined />} htmlType=\"submit\" onClick={handleSubmit_cocktail} >search</Button>\n                           </div>\n\n                           <div className=\"search_info\">\n                               <label htmlFor=\"cocktail_ingredient\"> Already have an ingredient ? </label><Input className=\"input_search\"  name=\"name\"  placeholder=\"ingredient\" onChange={handleChange_ingredient} value={inputValue_ingredient}  ></Input> \n                               <Button  icon={<SearchOutlined />} htmlType=\"submit\" onClick={handleSubmit_ingredient} >search</Button>\n                           </div>\n\n                     </div>\n                \n                  \n        </div>\n    )\n}\n\nexport default Nav;","import validate from 'validate.js';\n\nconst displayError = (props) => {\n    const constraints = {\n           password: {\n             presence: true,\n             length: {\n               minimum: 8,\n               message: \": Password must have at least 8 characters\"\n             }\n           }, \n           pseudo: {\n             presence: true,\n             length: {\n              minimum: 1000,\n              message: \": Password must have at least 8 characters\"\n            }\n           }\n       };\n       //result = undefined if input is empty so let error for pseudo\n       const result = validate(props, constraints);\n       if (result)\n       \n   \n      return [result.password];\n  } \n  \n  export default displayError;","import React, { useState, useEffect } from 'react';\n//import './index.css';\nimport  displayError  from '../../lib/validationPassword';\nimport {Input} from 'antd';\n// component = function return element to display\nconst NewPassword = (props,{password, error, onSubmit, init}) => {\n \n    const URL = process.env.REACT_APP_URL_LOGIN; \n    let token = props.match.params.passwordResetToken;\n   \n    const [formState, setFormState] = useState(props.password);\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n            \n    }\n   const result = displayError(formState); \n\n const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if (!result[0]) { \n          props.onSubmit(token,formState);\n        \n        }\n      \n    }\n\n        if(props.error === false) {\n          window.location.replace(URL);\n        }\n        \n\n      useEffect(() => {\n        props.init();\n       \n        }, []);\n   \n      let password_input = document.getElementById(\"password\") as HTMLInputElement;\n      let confirm_password_input = document.getElementById(\"confirm_password\") as HTMLInputElement;\n    \n      const confirmPassword = ()  => {\n        if(password_input.value != confirm_password_input.value) {\n          confirm_password_input.setCustomValidity(\"Passwords Don't Match\");\n        } else {\n          confirm_password_input.setCustomValidity('');\n        }\n      }\n      \n      let eye = document.getElementById(\"eye\") ;\n        \n       \n      const toggle = ()  => {\n        const type = password_input.getAttribute('type') === 'password' ? 'text' : 'password';\n        password_input.setAttribute('type', type);\n        eye.classList.toggle(\"fa-eye-slash\")\n      }\n    return (\n\n        <div className=\"setAccount form\">\n        <h1>Set your password</h1>\n         <form onSubmit={handleSubmit} action=\"/newPassword\" method=\"POST\" >\n         <label htmlFor=\"password\"> Password : </label> < br/><Input onKeyUp={confirmPassword} className=\"input\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Enter your new password\" onChange={handleChange} value={formState.password} required></Input><i id=\"eye\" onClick={toggle} className=\"fa fa-eye\" aria-hidden=\"true\"></i>< br/> < br/>\n          <label htmlFor=\"confirm_password\"> Confirm Password : </label> < br/><Input onKeyUp={confirmPassword} className=\"input\" id=\"confirm_password\" name=\"confirm_password\" type=\"password\" placeholder=\"Confirm password\"  required></Input> < br/><br/>\n          <button type=\"submit\"  >Submit</button> < br/> < br/>\n\n          <p>  {result} </p>\n        </form>\n       \n        </div>\n\n    )\n    \n} \n\nexport default NewPassword;","import userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    password: '',\n    error:''\n };\n\n export const RESET_PASSWORD_SUCCESS = \"ACCOUNT_SUCCESS\";\n export const RESET_PASSWORD_ERROR = \"ACCOUNT_ERROR\";\n export const INIT = \"INIT\";\n\nconst reducer = (state = stateInitial, action : {type: string, payload : any}) => {\n    switch(action.type){\n        case RESET_PASSWORD_SUCCESS: \n            return {\n                ...state, // = stateInitial\n                ...action.payload,// = overwrite stateInitial with data from appli\n                error: false\n\n            }\n        case RESET_PASSWORD_ERROR:\n            return {\n                ...state,\n                error: true,\n\n            }\n\n        \n        case INIT: \n            return {\n                ...state, \n                ...stateInitial\n\n            }\n        default:\n            return state;\n    }\n}\n\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\n\nexport const newPassword = (token, formState) => (dispatch, getState) => {\n    // name of the input\n  \n    // axios collect post info from the user via name input\n    return  userAPI.newPassword(token,formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(resetPasswordSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            console.log(err);\n            if (err.response.data) {\n                alert(err.response.data.msg);\n                }\n            dispatch(resetPasswordError());\n        });\n};\n\n\n\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\n\n\nexport const resetPasswordSuccess = (payload) => ({\n    type: RESET_PASSWORD_SUCCESS,\n    payload\n});\n\nexport const resetPasswordError = () => ({\n    type: RESET_PASSWORD_ERROR\n});\n\n\nexport const init = () => ({\n    type: INIT\n});\n\nexport default reducer;","import { connect } from 'react-redux';\nimport NewPassword from '../components/NewPassword';\nimport {  newPassword, init } from '../store/reducer/newPassword-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   password: state.newPassword.password,\n   error: state.newPassword.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n  onSubmit: (token,formState) => {\n        dispatch(newPassword(token,formState));// transfer input_name value ?\n    },\n  init: () => {\n      dispatch(init());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPassword);","import React from 'react';\n\nimport './index.css'\n\nconst NotFound = () => {\n\n    return (\n        <div className=\"ntf\"> \n        <h1>   \"404\" </h1>\n         \n        </div>\n    )\n}\n\nexport default NotFound;","import React, { useState, useEffect } from 'react';\n//import './index.css';\nimport { Redirect, Link } from 'react-router-dom';\nimport  displayError  from '../../lib/validationPassword';\nimport {Input} from 'antd';\n// component = function return element to display\nconst Password = ({password, error, onSubmit, init}) => {\n\n    const URL_ACCOUNT = process.env.REACT_APP_URL_ACCOUNT;\n \n    const [formState, setFormState] = useState({password});\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n   \n    }\n\n   const result = displayError(formState); \n\n const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if (!result[0]) { \n          onSubmit(formState);\n           \n        }\n      \n       \n   \n    }\n    if(error === false) {\n        window.location.replace(URL_ACCOUNT);\n     }\n     let password_input = document.getElementById(\"password\") as HTMLInputElement;\n     let confirm_password_input = document.getElementById(\"confirm_password\") as HTMLInputElement;\n   \n     const confirmPassword = ()  => {\n       if(password_input.value != confirm_password_input.value) {\n         confirm_password_input.setCustomValidity(\"Passwords Don't Match\");\n       } else {\n         confirm_password_input.setCustomValidity('');\n       }\n     }\n     \n     let eye = document.getElementById(\"eye\") ;\n     \n    \n      const toggle = ()  => {\n        const type = password_input.getAttribute('type') === 'password' ? 'text' : 'password';\n        password_input.setAttribute('type', type);\n        eye.classList.toggle(\"fa-eye-slash\")\n      }\n    useEffect(() => {\n        init();\n        }, []);\n    return (\n\n        <div className=\"setAccount form\">\n        <h1>Set your password</h1>\n        <Link to=\"/account\" className=\"return\"> Back </Link>\n         <form onSubmit={handleSubmit} action=\"/update-password\" method=\"POST\" >\n         <label htmlFor=\"password\"> Password : </label> < br/><Input onKeyUp={confirmPassword} className=\"input\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Entrer votre password\" onChange={handleChange} value={formState.password} required></Input><i id=\"eye\" onClick={toggle} className=\"fa fa-eye\" aria-hidden=\"true\"></i>< br/> < br/>\n          <label htmlFor=\"confirm_password\"> Confirm Password : </label> < br/><Input onKeyUp={confirmPassword} className=\"input\" id=\"confirm_password\" name=\"confirm_password\" type=\"password\" placeholder=\"Confirm password\"  required></Input> < br/><br/>\n          <button type=\"submit\"  >Submit</button> < br/> < br/>\n\n          <p>  {result} {error}</p>\n        </form>\n       \n        </div>\n\n    )\n    \n} \n\nexport default Password;","import { connect } from 'react-redux';\nimport Password from '../components/Password';\nimport {  accountPassword, init } from '../store/reducer/account-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   password: state.account.password,\n   update: state.account.update,\n   error: state.account.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n  onSubmit: (formState) => {\n        dispatch(accountPassword(formState));// transfer input_name value ?\n    },\n  init: () => {\n      dispatch(init());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Password);","import React from 'react';\nimport { Route,  Redirect } from 'react-router-dom';\nimport userAPI from '../../services/userAPI';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest} //contains the React Router props when the initial component is rendered\n    render={props => ( \n     userAPI.isAuth() ?  <Component {...props} /> : <Redirect to=\"/home\" />\n      \n      )}\n  />\n);\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route,  Redirect } from 'react-router-dom';\nimport userAPI from '../../services/userAPI';\n\nconst PublicRoute = ({ component: Component,restricted, ...rest }) => (\n  <Route\n    {...rest} //contains the React Router props when the initial component is rendered\n    render={props => (\n      userAPI.isAuth() && restricted ? <Redirect to=\"/home\" /> : <Component {...props} />\n      \n     )}\n  />\n);\n\nexport default PublicRoute;","import React, { useState } from 'react';\nimport {Link } from 'react-router-dom';\nimport  displayError  from '../../lib/validationMail';\nimport {Input} from 'antd';\n// component = function return element to display\nconst ResendToken = ({mail,  error, onSubmit, init}) => {\n\n    init();\n\n\n\n    const [formState, setFormState] = useState({mail});\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n     \n            \n    }\n\n   const result = displayError(formState); \n\n const handleSubmit = (e) => {\n        e.preventDefault();\n        \n       \n      \n        if (!result[0]) { \n          onSubmit(formState);\n        \n        }\n        \n        \n   \n    }\n\n   \n\n    return (\n\n        <div className=\"setAccount form\">\n        <h1>Enter your e-mail</h1>\n        <Link to=\"/account\" className=\"return\"> Back </Link>\n         <form onSubmit={handleSubmit} action=\"/update-mail\" method=\"POST\" >\n          <Input className=\"input\" name=\"mail\" placeholder=\"Enter votre mail\" onChange={handleChange} value={formState.mail} required></Input>\n         \n          <button type=\"submit\" >Submit</button>\n\n          <p> {result}  {error}</p>\n        </form>\n        \n        </div>\n\n    )\n    \n} \n\nexport default ResendToken;","import { connect } from 'react-redux';\nimport ResendToken from '../components/ResendToken';\nimport {  resend, init } from '../store/reducer/account-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   mail: state.account.mail,\n   error: state.account.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n  onSubmit: (formState) => {\n        dispatch(resend(formState));// transfer input_name value ?\n    },\n  init: () => {\n      dispatch(init());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResendToken);","\nimport validate from 'validate.js';\n\nconst displayError = (props) => {\n    const constraints = {\n           mail: {\n             presence: true,\n             format: {\n               pattern: /^[a-z0-9._-]+@[a-z0-9._-]{2,}\\.[a-z]{2,4}$/,\n               message: \": Format invalid\"\n             }\n           },\n           password: {\n             presence: true,\n             length: {\n               minimum: 8,\n               message: \": Password must have at least 8 characters\"\n             }\n           },\n           pseudo: {\n             presence: true,\n             length: {\n              minimum: 1000,\n              message: \": \"\n            }\n           }\n       };\n       //result = undefined if input is empty so let error for pseudo\n       const result = validate(props, constraints);\n       if (result)\n       \n   \n      return [result.mail, \" \", result.password];\n  } \n  \n  export default displayError;","import React, { useState, useEffect } from 'react';\n//import './index.css';\nimport { Link, useHistory } from 'react-router-dom';\nimport  displayError  from '../../lib/validation';\nimport {Button, Input} from 'antd';\nimport './index.css';\n// component = function return element to display\nconst Signup = ({pseudo, mail, password, onSubmit, succeed, init}) => {\n    \n    const URL = process.env.REACT_APP_URL_LOGIN;\n\n    const [formState, setFormState] = useState({pseudo, mail, password});\n    const [validateMail, setValidateMail] = useState(true); \n    const [validatePassword, setValidatePassword] = useState(true); \n\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n       \n            \n    }\n\n   const result = displayError(formState); \n \n\n   const handleSubmit = (e) => {\n          e.preventDefault();\n          \n          if (result[0] === undefined && result[2] === undefined) { \n          onSubmit(formState);\n          \n            if(succeed === false) {\n              alert('signup failed')\n            }\n          }\n         result[0] ? setValidateMail(false): setValidateMail(true);\n          \n         result[2] ? setValidatePassword(false) : setValidatePassword(true);\n     \n      } \n      \n      if(succeed === true){ \n        setTimeout(function () {\n          window.location.replace(URL);\n        }, 1000);\n        }\n\n      let password_input = document.getElementById(\"password\") as HTMLInputElement;\n      let confirm_password_input = document.getElementById(\"confirm_password\") as HTMLInputElement;\n    \n      const confirmPassword = ()  => {\n        if(password_input.value != confirm_password_input.value) {\n          confirm_password_input.setCustomValidity(\"Passwords Don't Match\");\n        } else {\n          confirm_password_input.setCustomValidity('');\n        }\n      }\n      \n      let eye = document.getElementById(\"eye\") ;\n     \n    \n      const toggle = ()  => {\n        const type = password_input.getAttribute('type') === 'password' ? 'text' : 'password';\n        password_input.setAttribute('type', type);\n        eye.classList.toggle(\"fa-eye-slash\")\n      }\n\n     \n      useEffect(() => {\n        init();\n        }, []);\n   \n\n    return (\n\n        <div className=\"form\"> \n\n        <h1>Sign Up</h1><br/>\n\n         <form onSubmit={handleSubmit} action=\"/signup\" method=\"POST\" >\n          <label htmlFor=\"pseudo\">Pseudo : </label> < br/><Input className=\"input\" id=\"pseudo\" name=\"pseudo\" placeholder=\"Enter your pseudo\" onChange={handleChange} value={formState.pseudo} required></Input> <br/>\n          <label htmlFor=\"mail\">E-mail : </label> < br/><Input className=\"input\" id=\"mail\" name=\"mail\" placeholder=\"Enter your e-mail\" onChange={handleChange} value={formState.mail} required></Input> <br/>\n          <label htmlFor=\"password\"> Password : </label> < br/><Input onKeyUp={confirmPassword} className=\"input\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Enter your password\" onChange={handleChange} value={formState.password} required></Input><i id=\"eye\" onClick={toggle} className=\"fa fa-eye \" aria-hidden=\"true\"></i> < br/>\n          <label htmlFor=\"confirm_password\"> Confirm Password : </label> < br/><Input onKeyUp={confirmPassword} className=\"input\" id=\"confirm_password\" name=\"confirm_password\" type=\"password\" placeholder=\"Confirm password\"  required></Input> < br/><br/>\n          <Button htmlType=\"submit\" >Submit</Button>\n          < br/>\n          { validateMail  ? \" \" : result[0]} { validatePassword  ? \" \" : result[2]} <p>  \n            <Link to=\"/login\">Have an account ?</Link>\n          </p>\n        </form>\n        \n        </div>\n\n    )\n    \n} \n\nexport default Signup;","\nimport userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    pseudo: '',\n    mail: '',\n    password: '',\n    succeed: ''\n };\n\n export const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\n export const SIGNUP_ERROR = \"SIGNUP_ERROR\";\n export const INIT = \"INIT\";\n\nconst reducer = (state = stateInitial, action : {type: string, payload : any}) => {\n    switch(action.type){\n        case SIGNUP_SUCCESS: \n            return {\n                ...state, // = stateInitial\n                ...action.payload,// = overwrite stateInitial with data frop appli\n                succeed: true\n\n            }\n        case SIGNUP_ERROR:\n            return {\n                ...state,\n                succeed: false,\n\n            }\n        case INIT:\n            return {\n                ...state,\n                ...stateInitial,\n\n            }\n\n        default:\n            return state;\n    }\n}\n\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\nexport const signUp = (formState) => (dispatch, getState) => {\n    // name of the input\n    // axios collect post info from the user via name input\n    return  userAPI.signupUser(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of auhtController.postSignup\n            \n            dispatch(signupSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            dispatch(signupError());\n            if (err.response.data.text) {\n                alert(err.response.data.text);\n                }\n            else if (err.response.data.error.keyValue.pseudo || err.response.data.error.keyValue.mail) {\n                alert((err.response.data.error.keyValue.pseudo ||  err.response.data.error.keyValue.mail) + \" existe déjà!\");\n                }\n                else {\n                    return err\n                }\n \n            \n        });\n};\n\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\n\n\nexport const signupSuccess = (payload) => ({\n    type: SIGNUP_SUCCESS,\n    payload\n});\n\nexport const signupError = () => ({\n    type: SIGNUP_ERROR,\n});\n\nexport const init = () => ({\n    type: INIT\n});\nexport default reducer;","  \nimport { connect } from 'react-redux';\nimport Signup from '../components/Signup';\nimport { signUp, init } from '../store/reducer/signup-reducer';\n\n\n\nconst mapStateToProps =\n \n(state) => ({\n   pseudo: state.signup.pseudo, \n   mail: state.signup.mail,\n   password: state.signup.password,\n   subscriber: state.signup.subscriber,\n   succeed: state.signup.succeed\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n   onSubmit: (formState) => {\n        dispatch(signUp(formState));// transfer input_name value ?\n    },\n    init: () => {\n        dispatch(init())\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, { useState, useEffect } from 'react';\n//import './index.css';\nimport { Link } from 'react-router-dom';\nimport {Input} from 'antd';\n// component = function return element to display\nconst UserName = ({pseudo, error, onSubmit, init}) => {\n\n    const URL_ACCOUNT = process.env.REACT_APP_URL_ACCOUNT;\n    \n\n    const [formState, setFormState] = useState({pseudo});\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n       \n            \n    }\n \n\n const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        onSubmit(formState); \n    }\n\n           \n    if(error === false) {\n        window.location.replace(URL_ACCOUNT);\n     }\n   \n     useEffect(() => {\n        init();\n        }, []);\n\n    return (\n\n        <div className=\"setAccount form\" >\n        <h1>Modifier votre pseudo</h1>\n        <Link to=\"/account\" className=\"return\">  Back </Link>\n         <form onSubmit={handleSubmit} action=\"/update-pseudo\" method=\"POST\" >\n          <Input className=\"input\" name=\"pseudo\" placeholder=\"Entrer votre pseudo\" onChange={handleChange} value={formState.pseudo} required></Input>\n         \n          <button  type=\"submit\" >Submit</button>\n\n          <p> {error}</p>\n\n        </form>\n        \n        </div>\n\n    )\n    \n} \n\nexport default UserName;","import { connect } from 'react-redux';\nimport UserName from '../components/UserName';\nimport {  accountPseudo, init } from '../store/reducer/account-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   pseudo: state.account.pseudo,\n   update: state.account.update,\n   error: state.account.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n  onSubmit: (formState) => {\n        dispatch(accountPseudo(formState));// transfer input_name value ?\n    },\n  init: () => {\n      dispatch(init());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserName);","import React ,{useEffect} from 'react';\nimport { Route, Switch, Redirect, Link} from 'react-router-dom';\n\nimport './index.css';\n\n\nimport Account from '../../containers/Account';\nimport Admin from '../Admin';\nimport CocktailsAlcoholic from '../CocktailsAlcoholic';\nimport CocktailsByIngredient from '../CocktailsByIngredient';\nimport CocktailsNonAlcoholic from '../CocktailsNonAlcoholic';\nimport CocktailInfo from '../CocktailInfo';\nimport Confirm from '../../containers/Confirm';\nimport Footer from '../Footer';\nimport ForgetPassword from '../../containers/ForgetPassword';\nimport Home from '../Home';\nimport LegalMentions from '../LegalMentions';\nimport Loggedout from '../../containers/Loggedout';\nimport Login from '../../containers/Login';\nimport Mail from '../../containers/Mail';\nimport Nav from '../Nav';\nimport NewPassword from '../../containers/NewPassword';\nimport NotFound  from '../NotFound';\nimport Password from '../../containers/Password';\nimport PrivateRoute from '../PrivateRoute';\nimport PublicRoute from '../PublicRoute';\nimport ResendToken from '../../containers/ResendToken';\nimport Signup from '../../containers/Signup';\nimport UserName from '../../containers/UserName';\n\n\nimport userAPI from '../../services/userAPI';\nimport logo1 from '../../icones/peche1.svg';\n\nconst App = () => {\n\n  setInterval(function () {\n      userAPI.logout();\n    }, (60*60*1000));\n\n\n  /*\n const displayAuth = () => {\n       const auth = document.getElementsByClassName('auth')[0] as HTMLElement;\n       const un = document.getElementsByClassName('un')[0] as HTMLElement;\n        if(userAPI.isAuth()) {\n            auth.style.display='block';\n            un.style.display='none';\n          }\n          else {\n            auth.style.display='none';\n            un.style.display='block';\n          }\n\n        }\n  useEffect(() => {\n    displayAuth();\n  }, [])\n  <div className=\"authentification\">\n\n  <div className=\"un authentificated\">\n   <Link to=\"/signup\"> signup</Link >                \n   <Link to=\"/login\"> login</Link >\n  </div>\n  \n  <div className=\" auth authentificated\">\n    < Loggedout/>\n  </div>\n</div>\n*/\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n      <div className=\"brand-header\">\n\n           <div className=\"brand-name\">\n                <img src={logo1} width=\"70\" alt=\"pêche melba icone\"/>  Home Made Cocktail !! \n           </div>\n\n          \n                   \n      </div>  \n         \n      </header>\n      <Nav />\n      <Switch>\n        <Redirect exact strict from=\"/\" to=\"home\" />\n        <PublicRoute restricted={false} path=\"/home\" exact component={Home}/>\n        <PublicRoute restricted={false} path=\"/cocktails_alcoholic\" exact component={CocktailsAlcoholic}/>\n        <PublicRoute restricted={false} path=\"/cocktails_non_alcoholic\" exact component={CocktailsNonAlcoholic}/>\n        <PublicRoute restricted={false} path=\"/cocktail/:cocktail_name\" exact component={CocktailInfo}/>\n        <PublicRoute restricted={false} path=\"/cocktails_by_ingredient/:ingredient\" exact component={CocktailsByIngredient}/>\n        <PrivateRoute path=\"/account\" exact component={Account}/>\n        <PrivateRoute path=\"/admin-938-kml\" exact  component={Admin}/>\n        <PublicRoute restricted={true} path=\"/login\" exact  component={Login}/>\n        <PublicRoute restricted={true} path=\"/forget-passord\" exact  component={ForgetPassword}/>\n        <PublicRoute restricted={true} path=\"/new-password/:passwordResetToken\" exact  component={NewPassword}/>\n        <PrivateRoute path=\"/update-mail\" exact component={Mail} />\n        <PrivateRoute path=\"/update-password\" exact component={Password} />\n        <PublicRoute restricted={true} path=\"/signup\" exact  component={Signup} />\n        <PublicRoute restricted={true} path=\"/confirm/:token\" exact component={Confirm}/>\n        <PublicRoute restricted={true} path=\"/resend-email\" exact  component={ResendToken} />\n        <PrivateRoute path=\"/update-pseudo\" exact component={UserName} />\n        <PublicRoute restricted={false} path=\"/legal-mentions\" exact component={LegalMentions}/>\n        <PublicRoute restricted={false}  path=\"/404\" exact component={NotFound}/>\n          <Redirect to=\"/404\" />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    loggedout: false,\n    pseudo: '',\n    error: ''\n };\n\n export const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\n export const LOGOUT_ERROR = \"LOGOUT_ERROR\";\n\n export const PSEUDO_SUCCESS = \"PSEUDO_SUCCESS\";\n export const PSEUDO_ERROR = \"PSEUDO_ERROR\";\n\nconst reducer = (state = stateInitial, action: {type: string, payload : any}) => {\n    switch(action.type){\n        case LOGOUT_SUCCESS: \n            return {\n                ...state, \n                loggedout: true,\n                error: false\n\n            }\n        case LOGOUT_ERROR:\n            return {\n                ...state,\n                loggedout: false,\n                error: \"Déconnexion non réussi\",\n\n            }\n        case PSEUDO_SUCCESS: \n            return {\n                ...state, // = stateInitial\n                ...action.payload,// = overwrite stateInitial with data from appli\n                error: false\n\n            }\n        case PSEUDO_ERROR:\n            return {\n                ...state,\n                ...stateInitial,\n                error: \"no user\"\n\n            }\n        \n        default:\n            return state;\n    }\n}\n\n \n\n\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\nexport const displayPseudo = () => (dispatch, getState) => {\n    \n\n    // collect user info\n    return  userAPI.pseudoUser()\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of PSEUDOController.displayPSEUDO\n            \n            dispatch(pseudoSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n \n            dispatch(pseudoError());\n        });\n};\n\nexport const logoutUser = () => (dispatch, getState) => {\n    \n\n    // collect user info\n    return  userAPI.logOut()\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of PSEUDOController.displayPSEUDO\n            \n            dispatch(logoutSuccess());\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n                \n            dispatch(logoutError());\n        });\n};\n\nexport const logoutSuccess = () => ({\n    type: LOGOUT_SUCCESS,\n});\n\nexport const logoutError = () => ({\n    type: LOGOUT_ERROR,\n});\n\nexport const pseudoSuccess = (payload) => ({\n    type: PSEUDO_SUCCESS,\n    payload\n});\n\nexport const pseudoError = () => ({\n    type: PSEUDO_ERROR\n});\n\nexport default reducer;","import { combineReducers } from 'redux';\n\nimport account from './account-reducer';\nimport confirm from './confirm-reducer';\nimport loggedout from './loggedout-reducer';\nimport login from './login-reducer';\nimport signup from './signup-reducer';\nimport newPassword from './newPassword-reducer';\nimport reset from './reset-reducer';\n\nconst rootReducer = combineReducers({\n\n    account,\n    confirm,\n    loggedout,\n    login,\n    newPassword,\n    reset,\n    signup\n  \n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './reducer';\n\n\nconst store = createStore(rootReducer, applyMiddleware(reduxThunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport './index.css' \nimport App from './components/App';\n//import * as serviceWorker from './serviceWorker';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nconst ComponentToRender = () => (\n   <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n  </Provider>\n    \n);\nReactDOM.render(<ComponentToRender />, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}